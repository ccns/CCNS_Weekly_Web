<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Sp #1 - CCNS 2020 回顧</title>
    <url>/sp1/</url>
    <content><![CDATA[<p>去年對大部分人來說應該都是奇妙的一年，從疫情爆發開始發生了很多事情，生活型態開始改變，例如大家出門開始戴上口罩、科技公司開始嘗試遠端工作，也發生不少科技大事，例如 SpaceX 載人火箭試驗、Starlink 開始提供服務、蘋果新的 ARM CPU 發表、美股及加密貨幣漲破歷史高點、HoloEn 出道造成世界性 Vtuber 討論度竄升等等。CCNS 在去年一整年也做了不少有趣的事情，就讓我們一起來回顧一下 CCNS 的 2020 吧！</p>
<hr>
<h3 id="機櫃遷移"><a href="#機櫃遷移" class="headerlink" title="機櫃遷移"></a>機櫃遷移</h3><p>由於本校活動組對本社十分關心，考量到未來社團內成員使用社團資源的自由度與便利性，我們將本社位於社團機房內的機櫃遷移至資工系內機房，在此特別感謝蔡孟勳老師協助。</p>
<img src="/sp1/serverroom_ian.jpg" class="">

<p>在社團網管的努力下，我們機櫃也進行了幾項工程，例如路由器虛擬化與線路重整</p>
<img src="/sp1/serverroom_machines.jpg" class="">

<p>我們十分期待下一年的計劃，我們也隨時歡迎有熱忱的同學加入網管的行列</p>
<h3 id="CCNS-鏡像站上線"><a href="#CCNS-鏡像站上線" class="headerlink" title="CCNS 鏡像站上線"></a>CCNS 鏡像站上線</h3><p>我們於 2020 年正式上線多個 Linux 發行版(<a href="https://archlinux.ccns.ncku.edu.tw/">Arch Linux</a>, <a href="https://ubuntu.ccns.ncku.edu.tw/">Ubuntu</a>, <a href="https://debian.ccns.ncku.edu.tw/">Debian</a>, <a href="https://alpine.ccns.ncku.edu.tw/">Alpine</a>, <a href="https://centos.ccns.ncku.edu.tw/">CentOS</a>)的鏡像站服務，本服務主要架設在社團於資工系的機房，也感謝電機系提供虛擬機器空間。為提升鏡像站使用率以及回饋開源社群，我們已聯絡各發行版的維護者於鏡像站列表加入我們的站臺，若需使用，請藉由 <code>http://&lt;發行版名稱&gt;.ccns.ncku.edu.tw</code> 存取我們的服務，歡迎 Linux 愛好者多加利用！</p>
<h3 id="Golang-Rust-讀書會"><a href="#Golang-Rust-讀書會" class="headerlink" title="Golang/Rust 讀書會"></a>Golang/Rust 讀書會</h3><p>去年我們嘗試了 Golang 以及 Rust 的讀書會，社員們參與的狀況很不錯，大家都學到不少，之後我們也會嘗試繼續找其他的主題來舉辦讀書會，歡迎有興趣的朋友加入 <a href="https://discord.ccns.io/">CCNS Discord</a>。</p>
<h3 id="Lan-Party"><a href="#Lan-Party" class="headerlink" title="Lan Party"></a>Lan Party</h3><p>Lan Party 不知不覺已經變成本社目前唯一每學期除了社博社大跟社課之外還有在定期辦的活動了，但說是 Lan Party 為什麼大家卻在打魔風跟猜動漫歌噴油呢？</p>
<img src="/sp1/lan_party.jpg" class="">
<img src="/sp1/lan_party_oil.png" class="">

<h3 id="CCNS-Minecraft-Server"><a href="#CCNS-Minecraft-Server" class="headerlink" title="CCNS Minecraft Server"></a>CCNS Minecraft Server</h3><p>在去年因為有個在美國讀碩班，因為疫情爆發封城在家很無聊的同學，用了社團的主機資源架設了 Minecraft 伺服器，後來還在 Minecraft 裏開了一場虛擬定期聚，現在伺服器還活著唷！</p>
<img src="/sp1/minecraft.png" class="">

<h3 id="轉型學藝社團"><a href="#轉型學藝社團" class="headerlink" title="轉型學藝社團"></a><del>轉型學藝社團</del></h3><p>去年底 Ian 跟 Raiso 同學在社辦添購了電子琴，在課餘時間休閒練琴，但是因此意外地吸引到了女社員，算是相隔七年社團又一次有女性，大幅降低男女比，算是意料之外的收穫。</p>
<img src="/sp1/piano.jpg" class="">

<h3 id="VR-頭套"><a href="#VR-頭套" class="headerlink" title="VR 頭套"></a>VR 頭套</h3><p>VR 已經不是什麼新東西了，但是去年 Raiso 同學自己買了一套 Oculus Quest 2 放在社辦借給大家玩，實現了大家見到 3D 老婆的夢想，空白同學體驗了之後覺得很不錯自己也採購了一套。</p>
<img src="/sp1/vr.jpg" class="">

<h3 id="CCNS-Vtuber-元年"><a href="#CCNS-Vtuber-元年" class="headerlink" title="CCNS Vtuber 元年"></a>CCNS Vtuber 元年</h3><p>雖然這社團本來就很宅，但去年 HoloEN 的出現讓這社團又油又宅，自從 Gura 出道以來社團多了好多 Ho 山孝子，社團的 Discord 還為此開設了 #vtuber 和 #vtuber-notify 頻道。</p>
<img src="/sp1/amelia.png" class="">

<h3 id="聖誕交換禮物"><a href="#聖誕交換禮物" class="headerlink" title="聖誕交換禮物"></a>聖誕交換禮物</h3><p>去年聖誕節首次嘗試了社內的交換禮物，大家一定想說一群肥宅有什麼好交換的，oh nononono…，就是一群肥宅才有趣，例如舜傑同學就特地準備了下面這個神奇的禮物，實在是有夠油 peko</p>
<img src="/sp1/peko.jpg" class="">

<p>但是很難過的事情是幾天後他從有趣變廚餘了，想用這個做低成本 Cosplay 的朋友們記得買假蘿蔔 peko</p>
<img src="/sp1/pekopeko.jpg" class="">

<h3 id="打飛蛾"><a href="#打飛蛾" class="headerlink" title="打飛蛾"></a>打飛蛾</h3><p>打飛蛾</p>
<img src="/sp1/moth.png" class="">

<hr>
<p>嗯嗯看來 CCNS 的 2020 也是過得相當充實啊，除了列出來的這些之外還有很多小活動，例如揪團吃拉麵、揪團吃火鍋之類的。我們百年沒更新的社團網站 <a href="https://ccns.io/">ccns.io</a> 也在去年更新了。雖然疫情來襲，但我們有幸待在相對安全的台灣，度過了溫馨又充實的一年，期許大家 2021 能夠朝著自己的目標繼續前進。喜歡 CCNS 或對我們的有興趣的讀者也歡迎加入 <a href="https://discord.ccns.io/">CCNS Discord</a> 或者到 <a href="https://fb.me/ncku.ccns/">CCNS 粉專</a> 私訊我們唷！</p>
]]></content>
      <tags>
        <tag>weekly</tag>
        <tag>sp</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #0 - Hello Weekly!</title>
    <url>/week0/</url>
    <content><![CDATA[<p>嗨，大家過得好嗎？雖然有點突然，但我要來預告一項社員們策畫許久的計畫 — CCNS 週刊！創刊號預計於下週一發佈，歡迎大家透過底部的訂閱表格訂閱！</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #1 - 創刊號</title>
    <url>/week1/</url>
    <content><![CDATA[<p>大家好，我們是成大電腦網路愛好社 CCNS，是的我們還活著，這個週刊計畫是由社員發起並共同策劃，希望透過這樣的形式督促自己寫文章，並和大家分享社員們最近在做些什麼、學什麼新東西，因為我們是第一次經營類似的東西，也歡迎大家不吝嗇給我們一些回饋跟意見，如果你覺得不錯的話也可以跟親朋好友分享哦！</p>
<p>那麼話不多說來看看這週我們帶來哪些文章吧</p>
<h2 id="專欄-SRE-Works"><a href="#專欄-SRE-Works" class="headerlink" title="[專欄] SRE Works"></a>[專欄] SRE Works</h2><h3 id="English-Nginx-SSL-configuration-fullchain-pem-vs-cert-pem-–-TsundereChen"><a href="#English-Nginx-SSL-configuration-fullchain-pem-vs-cert-pem-–-TsundereChen" class="headerlink" title="[English] Nginx SSL configuration - fullchain.pem vs cert.pem – TsundereChen"></a><a href="https://blog.tsunderechen.io/2020/04/nginx-ssl-certificate-fullchain-vs-cert/">[English] Nginx SSL configuration - fullchain.pem vs cert.pem</a> – TsundereChen</h3><p>A note because of a warning message created by curl, this note will take a look at the differences between <code>fullchain</code> and <code>cert</code></p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="翻譯-為什麼學界應使用自由軟體-–-gholk"><a href="#翻譯-為什麼學界應使用自由軟體-–-gholk" class="headerlink" title="[翻譯] 為什麼學界應使用自由軟體 – gholk"></a><a href="http://gholk.github.io/school-should-use-free-software.html">[翻譯] 為什麼學界應使用自由軟體</a> – gholk</h3><p>自由軟體開放原始碼，適合教學，並引領學生對軟體自由背後意義的思考。<br>本文翻譯 gnu 的文章，再加上自己的改寫。<br>大學時候翻的，但後來大學時的 blog 被學校收掉了，現在再重上架到自己的 blog。</p>
<h3 id="簡報-編輯器之神-Vim-–-HexRabbit-Sou"><a href="#簡報-編輯器之神-Vim-–-HexRabbit-Sou" class="headerlink" title="[簡報] 編輯器之神: Vim – HexRabbit, Sou"></a><a href="https://docs.google.com/presentation/d/1vG92EIYHy663cG-jt7tIVLGtIwEhK2B10cBpYdvPhbg/edit?usp=sharing">[簡報] 編輯器之神: Vim</a> – HexRabbit, Sou</h3><p>我之前的預設編輯器是 Vim，而我設 mapping 的原則是：「幹你娘設爆」<br>沒錯，就是幹你娘設爆，老子才不管甚麼 recursive mapping 三小的，每次設的就是蝦姬芭一大坨。inoremap 不夠用就設成 map，嫌 map 五個鍵不夠就乾脆貼整個 linux kernel 的代碼順便編譯執行。按鍵一按直接觸發 OOM，跟把整個工作站的 RAM 全拔下來沒兩樣。<br>我還記得，我那個月用 Vim 寫程式 25 天，老闆跑來跟我說，這個月公司斷電重開了 26 次，你有頭緒嗎？<br>我他媽的怎麼會知道。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="英文-利用-race-condition-爆打各大防毒軟體-–-HexRabbit"><a href="#英文-利用-race-condition-爆打各大防毒軟體-–-HexRabbit" class="headerlink" title="[英文] 利用 race condition 爆打各大防毒軟體 – HexRabbit"></a><a href="https://www.rack911labs.com/research/exploiting-almost-every-antivirus-software/">[英文] 利用 race condition 爆打各大防毒軟體</a> – HexRabbit</h3><p>最近安全研究人員發現利用 symlink 與檔案的互相切換所造成的 race condition 能夠誘導防毒軟體誤刪系統重要檔案，進而使系統崩潰造成 DoS(Denial of Service) 攻擊或甚至是權限提升。</p>
<h3 id="外星人來襲，人類岌岌可危-–-HexRabbit"><a href="#外星人來襲，人類岌岌可危-–-HexRabbit" class="headerlink" title="外星人來襲，人類岌岌可危 – HexRabbit"></a><a href="https://www.theguardian.com/world/2020/apr/27/pentagon-releases-three-ufo-videos-taken-by-us-navy-pilots">外星人來襲，人類岌岌可危</a> – HexRabbit</h3><p>五角大廈於上周一釋出的聲明中證實數段從 2004 - 2015 年間洩漏的不明飛行物影片是真有其事，而隔天 NHK 也報導日本自衛隊正在制定遭遇不明飛行物時的相關對策。</p>
<h3 id="星巴克咖啡廳辦公室-–-Rain"><a href="#星巴克咖啡廳辦公室-–-Rain" class="headerlink" title="星巴克咖啡廳辦公室 – Rain"></a><a href="https://mp.weixin.qq.com/s/7w37DCil0e0JprpnIfa3zg?fbclid=IwAR01LgBvpGn-zqSwKFls2nKmScF8y-12ANWgmR3EAa_PvpCTDXyt7p_3e2E">星巴克咖啡廳辦公室</a> – Rain</h3><p>隨著新的世代人才進入工作職場，也帶入了對於工作不同的嚮往與定義。在工作與生活的界線逐漸消失之時，不少餐飲巨頭也悄悄的進場布局，期望在不久未來能占有人們日常生活中的一席之地。星巴克正是其中之一，挾帶著龐大的品牌優勢，搭上疫情造成的 WFH 風氣，積極投入新時代工作環境的構築。</p>
<h3 id="Google-大砍行銷預算-–-Rain"><a href="#Google-大砍行銷預算-–-Rain" class="headerlink" title="Google 大砍行銷預算 – Rain"></a><a href="https://www.inside.com.tw/article/19615-google-to-cut-marketing-budgets-hiring-freeze-expected">Google 大砍行銷預算</a> – Rain</h3><p>武漢肺炎重創全球經濟，連科技巨頭 Google 也沒能避開這波衝擊大砍預算。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #10 - base64 算不算是一種加密</title>
    <url>/week10/</url>
    <content><![CDATA[<h2 id="專欄-SRE-works"><a href="#專欄-SRE-works" class="headerlink" title="[專欄] SRE works"></a>[專欄] SRE works</h2><h3 id="Testing-serverless-with-serverless"><a href="#Testing-serverless-with-serverless" class="headerlink" title="Testing serverless with serverless"></a><a href="https://blog.tsunderechen.io/2020/07/testing-serverless-code-with-serverless/">Testing serverless with serverless</a></h3><p>Recently I was assigned a task related to serverless coding, I was looking for ways to test the code locally. Thank god I found serverless, a program that solved lots of serverless problems.</p>
<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="手刻-pygame-矩形碰撞-中篇-碰撞後反彈-–-LanKuDot"><a href="#手刻-pygame-矩形碰撞-中篇-碰撞後反彈-–-LanKuDot" class="headerlink" title="手刻 pygame 矩形碰撞 (中篇) - 碰撞後反彈 – LanKuDot"></a><a href="https://airfishqi.blogspot.com/2019/07/blog-post.html">手刻 pygame 矩形碰撞 (中篇) - 碰撞後反彈</a> – LanKuDot</h3><p>碰撞發生後就要決定反彈的方向，以為可以透過碰撞發生時的相對位置決定，然而事情沒有那麼簡單。當矩形跑很快的時候，就會出現神奇的反彈情況。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h2 id="COSCUP-amp-SITCON-會後心得隨筆-–-Rain"><a href="#COSCUP-amp-SITCON-會後心得隨筆-–-Rain" class="headerlink" title="COSCUP &amp; SITCON 會後心得隨筆 – Rain"></a><a href="https://medium.com/random-life-journal/coscup-sitcon-%E6%9C%83%E5%BE%8C%E5%BF%83%E5%BE%97%E9%9A%A8%E7%AD%86-59572f5ca73c?source=friends_link&sk=428c4c742e32e764cd77fdfd5b5af062">COSCUP &amp; SITCON 會後心得隨筆</a> – Rain</h2><p>這兩週前後分別去 COSCUP 和 SITCON 兩場技術研討會擔任講者，分享了一些技術和經驗給有一面之緣的聽眾。仔細想想從高二到現在，已經參與技術社群四年多了，擔任過會眾、工作人員及講者三種角色，對很多事物也有了更深層的體悟和感想。大會的前後幾天也把握機會和許久未見的朋友聚了聚，交流彼此的近況和想法，頓時再次充滿了對技術與生活的熱忱。趁著記憶猶新之時隨筆幾段，讓演講者的身份再多一份經驗分享的價值，希望能幫上對技術研討會感興趣的你。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="最黑暗的界面時代來臨-網頁設計準備好了嗎？-–-gholk"><a href="#最黑暗的界面時代來臨-網頁設計準備好了嗎？-–-gholk" class="headerlink" title="最黑暗的界面時代來臨 網頁設計準備好了嗎？ – gholk"></a><a href="https://blog.user.today/dark-mode-web-design/">最黑暗的界面時代來臨 網頁設計準備好了嗎？</a> – gholk</h3><p>不要誤會，雖然 css/js 界一直很黑暗與混亂，但這裡的黑暗指的是近年來重新流行的暗色主題。文中探討了 css 規範對應暗色主題的流行而新增的 media query 檢測，與多種瀏覽器既有暗色主題的實作行為，最後提出一些在網站實作暗色主題時需要注意的地方。</p>
<h3 id="My-thoughts-on-Uber-FX-–-Rain"><a href="#My-thoughts-on-Uber-FX-–-Rain" class="headerlink" title="My thoughts on Uber FX – Rain"></a><a href="https://ewanvalentine.io/my-thoughts-on-uber-fx/">My thoughts on Uber FX</a> – Rain</h3><p>隨著軟體服務規模成長，組成完整功能的模組也越來越多，包含 broker, database, web-server, cache 等等琳瑯滿目，彼此之間相互的依賴性也隨之爆炸性增長。為了避免過高的耦合性，在程式設計中時常倚賴相依性注入 (dependency injection) 來解決，但仍會有許多初始化、建立連線、中止連線等等任務需要做細膩的先後順序排程。Uber 對此提供了一個輕量型的開源工具來解決問題，本篇文章作者將會介紹在 Go 語言開發時使用相依性注入所需注意的重點，以及 Uber FX 的簡易使用教學。</p>
<h3 id="研發商該如何看待台灣手機遊戲市場？-–-gholk"><a href="#研發商該如何看待台灣手機遊戲市場？-–-gholk" class="headerlink" title="研發商該如何看待台灣手機遊戲市場？ – gholk"></a><a href="https://medium.com/that-game-designer/%E8%A9%B2%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%8F%B0%E7%81%A3%E6%89%8B%E6%A9%9F%E9%81%8A%E6%88%B2%E5%B8%82%E5%A0%B4-224def386748">研發商該如何看待台灣手機遊戲市場？</a> – gholk</h3><p>台灣市場規模雖不如日本、南韓，更遠不如中國，但人民易於接受不同文化，也沒有中國的遊戲審查制度，仍是十分有發展性的市場。作者歸類出台灣手機遊戲市場的幾大特徵：風格接受廣泛、品質要求高、品牌忠誠度低、遊戲內容消耗快、勝者全拿，最後總結出給開發者的幾點建議。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #11 - 加入 CCNS 前，我是只能吃 480p 狗糧的動畫廢宅；加入 CCNS 後……</title>
    <url>/week11/</url>
    <content><![CDATA[<p>各位先進大家好，今天也有吃好吃的早餐嗎？來看看這期有什麼文章分享吧～</p>
<p>因為學期開始了，之後社團有什麼活動也會在 Weekly 裡面宣傳，歡迎校內外的夥伴們參加唷</p>
<h2 id="社團活動宣傳"><a href="#社團活動宣傳" class="headerlink" title="社團活動宣傳"></a>社團活動宣傳</h2><p>【CCNS Chatbot Q&amp;A 比賽】<br>CCNS chatbot 是曾經是一名軟體工程師，<br>他非常注重自己的程式碼品質，<br>時常規劃各種測試來確保服務功能正常運作，<br>除此之外他也非常注重使用者的品質，<br>知識量不足的人是無法使用他的服務的。</p>
<p>不幸的是因為上個月加班了 888 小時，<br>他已經從軟體工程師升級成 chatbot 了。<br>但他仍然貫徹他的原則，<br>準備了各式各樣的題目來考驗玩家的知識量，<br>總積分前三名的玩家將會在社團大會獲得獨家獎品！</p>
<p>【Discord Chatbot】<br>加入 CCNS Discord 的 qa-quiz 頻道<br><a href="https://discord.ccns.io/">https://discord.ccns.io/</a><br>透過以下指令 tag 機器人並開始遊戲<br>@escho /start<br>也可以使用 /help 指令查看有哪些指令可用</p>
<p>【Telegram Chatbot】<br>點擊連結加 chatbot 好友<br><a href="https://t.me/ccnsbot">https://t.me/ccnsbot</a></p>
<p>【netcat 版本】<br>apt install netcat<br>nc quiz-server.ccns.io 20924<br>或是使用 <a href="https://quiz-term.ccns.io/">https://quiz-term.ccns.io</a> 體驗</p>
<p>【Leaderboard 排行榜】<br><a href="https://leaderboard.ccns.io/">https://leaderboard.ccns.io/</a></p>
<p>【期初社團大會資訊】<br>時間：9/24 (四) 晚上七點 (會提早半小時開放場地)<br>地點：成功大學資訊系館 4201</p>
<h2 id="專欄-SRE-works"><a href="#專欄-SRE-works" class="headerlink" title="[專欄] SRE works"></a>[專欄] SRE works</h2><h3 id="Tuning-web-server-for-more-connections-–-TC"><a href="#Tuning-web-server-for-more-connections-–-TC" class="headerlink" title="Tuning web server for more connections – TC"></a><a href="https://blog.tsunderechen.io/2020/07/tuning-web-server-for-more-connections/">Tuning web server for more connections</a> – TC</h3><p>Having a poorly performed web server? With some simple tuning, you can have a web server that performed much better!</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="使用-adb-經-tor-網路連上具有洋蒽網址的-android-–-gholk"><a href="#使用-adb-經-tor-網路連上具有洋蒽網址的-android-–-gholk" class="headerlink" title="使用 adb 經 tor 網路連上具有洋蒽網址的 android – gholk"></a><a href="http://gholk.github.io/android-adb-tor-howto.html">使用 adb 經 tor 網路連上具有洋蒽網址的 android</a> – gholk</h3><p>tor 除了用來隱藏真實 ip， 還有一個好用的功能是能直接連線到無公網 ip 的裝置。 因此手機裝好 tor 後，無論有無公網 ip、使用行動網路或 wifi， 都可以在手機上開 vnc、sftp、adb over tcp 等服務， 在電腦上使用 torsocks 包裝程式後直接連線到手機。 但使用 adb 連線時，因為 PC 端 adb 程式的設計， 使用上需要將 daemon 丟到 tor 內，但 client 則需要在 tor 外。</p>
<h3 id="筆記-Round-不一定是四捨五入-LanKuDot"><a href="#筆記-Round-不一定是四捨五入-LanKuDot" class="headerlink" title="[筆記] Round() 不一定是四捨五入 - LanKuDot"></a><a href="https://airfishqi.blogspot.com/2020/09/round.html">[筆記] Round() 不一定是四捨五入</a> - LanKuDot</h3><p>什麼！？有些語言做 <code>Round(2.5)</code> 會得到 3，但有些卻是得到 2！？你知道除了國小教的 <em>四捨五入</em> ，還有一句 <em>五成雙</em> 的規則，讓取概數的結果在計算上更精確嗎？</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="聊聊-vim-mark-使用情境-code-參照-–-gholk"><a href="#聊聊-vim-mark-使用情境-code-參照-–-gholk" class="headerlink" title="聊聊 vim mark 使用情境 - code 參照 – gholk"></a><a href="https://amikai.github.io/2020/09/07/vim-mark-tips/">聊聊 vim mark 使用情境 - code 參照</a> – gholk</h3><p>vi 內建基本的書籤功能 <code>m</code> ，能快速在檔案中的不同位置，甚至在不同檔案間快速跳轉，在需要邊寫邊參考另一檔案時，是十分實用的功能。vi 的書籤有 26 個英文字母的大小寫共 52 個可用，其中大寫為跨檔案書籤，小寫為檔案內書籤。此外文末也提供了快速回到搜尋前的位置 <code>:nnoremap / ms/</code> 的鍵盤映射供使用。</p>
<p>原文作者 amikai 是一位對 vim 十分有愛的 neovim 使用者，常在 ccns discord 聊天室中推坑 vim 的各種 plug-in 與分享調校心得。</p>
<h3 id="簡報-適用網頁的中文排版慣例-–-gholk"><a href="#簡報-適用網頁的中文排版慣例-–-gholk" class="headerlink" title="[簡報] 適用網頁的中文排版慣例 – gholk"></a><a href="https://speakerdeck.com/bobbytung/ji-ge-zhong-wen-pai-ban-jue-qiao-you-xiao-gai-shan-yue-du-ti-yan">[簡報] 適用網頁的中文排版慣例</a> – gholk</h3><p>W3C 正在徵求各國文字的排版習慣，好定義出能滿足各語言需求的 CSS 規格。（例如 <code>::first-letter</code>，就是為英文排版習慣中段落首字加大而創造的偽元素。）在東亞方塊字文化圈中，中日韓的規格草案相繼出爐。這份是出席 W3C 的台灣出版專家 <em>董福興</em> 在 2016 年 MOPCON 上的簡報。</p>
<h3 id="蘋果也搞了個-Applebot-掃資料-–-gholk"><a href="#蘋果也搞了個-Applebot-掃資料-–-gholk" class="headerlink" title="蘋果也搞了個 Applebot 掃資料 – gholk"></a><a href="https://blog.gslin.org/archives/2020/09/05/9692/%e8%98%8b%e6%9e%9c%e4%b9%9f%e6%90%9e%e4%ba%86%e5%80%8b-applebot-%e6%8e%83%e8%b3%87%e6%96%99/">蘋果也搞了個 Applebot 掃資料</a> – gholk</h3><p>在 Hacker News 上有人發現有來自蘋果的網路爬蟲在掃資料，爬蟲很好好辨認，有蘋果的 user agent 和用蘋果的 ip 地址。爬蟲一開始是用 Go 寫的，跑在同一台辦公室裡的四台 Mac Pro 上。目前是供 Siri 使用，有人在猜 apple 想要做自己的搜尋引擎。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #12 - 巨匠之前，我是一個停車場管理員；巨匠之後，我是會用 :wq 退出 vim 的停車場管理員。</title>
    <url>/week12/</url>
    <content><![CDATA[<h2 id="專欄-Neo-vim"><a href="#專欄-Neo-vim" class="headerlink" title="[專欄] (Neo)vim"></a>[專欄] (Neo)vim</h2><h3 id="你應該擴充的-text-object-–-amikai"><a href="#你應該擴充的-text-object-–-amikai" class="headerlink" title="你應該擴充的 text object – amikai"></a><a href="https://amikai.github.io/2020/09/22/vim-text-object/">你應該擴充的 text object</a> – amikai</h3><p>vim 高效率編輯的背後，operator, motion, text object 的配合功不可沒。operator 是編輯的動作，text object 就是文字區塊，motion 是跳轉到文件點，透過三者的按鍵配合，就能達到所想及所得的編輯方式。</p>
<p>如果你有看過別人使用 vim，通常會有這種想法：怎麼隨便按幾個鍵就刪這裡刪那裡複製這複製那，速度快到看不懂在幹嘛，而且還不會出錯，因為只要想好要做什麼，按鍵按下去就對了，這也是為什麼會高效率。說了一堆，反正就是 <del><strong>耍潮必備</strong></del>。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="Quickly-experience-GraphQL-with-graphene-and-Django-–-Rain"><a href="#Quickly-experience-GraphQL-with-graphene-and-Django-–-Rain" class="headerlink" title="Quickly experience GraphQL with graphene and Django – Rain"></a><a href="https://medium.com/random-life-journal/quickly-experience-graphql-with-graphene-and-django-193873de4d4e?source=friends_link&sk=7ad75865257cf946aee62d98309ed290">Quickly experience GraphQL with graphene and Django</a> – Rain</h3><p>During my search for job opportunities in the past few weeks, I found that the frequency of the keyword “GraphQL” appears in the description of vacancies has become much higher than last year. Although I am an engineer accustomed to REST, my strong curiosity still drives me to give it a try.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="Entropy、Cross-Entropy-與-KL-Divergence-1-–-DC"><a href="#Entropy、Cross-Entropy-與-KL-Divergence-1-–-DC" class="headerlink" title="Entropy、Cross-Entropy 與 KL-Divergence (1)  – DC"></a><a href="https://blog.danielchen.cc/2019/06/19/entropy-cross-entropy-and-KL-divergence-1/">Entropy、Cross-Entropy 與 KL-Divergence (1) </a> – DC</h3><p>Cross-Entropy 在 ML 中是一個常見的損失評估函數，本文從 Entropy 開始探討資訊熵背後的動機，延伸至 Cross-Entroy，並解釋為何 Cross-Entropy 為何常被使用作 Loss function。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="【PM總動員】如何為產品注入玩心？Fourdesire-遊戲化設計的五個心法-–-Rain"><a href="#【PM總動員】如何為產品注入玩心？Fourdesire-遊戲化設計的五個心法-–-Rain" class="headerlink" title="【PM總動員】如何為產品注入玩心？Fourdesire 遊戲化設計的五個心法 – Rain"></a><a href="https://medium.com/3pm-lab/%E5%A6%82%E4%BD%95%E7%82%BA%E7%94%A2%E5%93%81%E6%B3%A8%E5%85%A5%E7%8E%A9%E5%BF%83-%E4%BA%94%E5%80%8B%E5%BF%83%E6%B3%95%E5%88%86%E4%BA%AB-e73b40d3113e">【PM總動員】如何為產品注入玩心？Fourdesire 遊戲化設計的五個心法</a> – Rain</h3><p>透過獎勵機制、視覺刺激、成就感驅動等等遊戲機制的手法，在日常生活中可說是越來越常見、包括賣場會員消費集點換取折扣、健身房大螢幕投影所有飛輪使用者的卡路里消耗量、尊榮會員獨享贈品等等。文中採訪了 Fourdesire 團隊中負責經營《記帳城市》的製作人，描述他在工作中關於在產品注入遊戲化機制的心法。</p>
<h3 id="英文-關閉-ssh-連線時的公鑰檢查-–-gholk"><a href="#英文-關閉-ssh-連線時的公鑰檢查-–-gholk" class="headerlink" title="[英文] 關閉 ssh 連線時的公鑰檢查 – gholk"></a><a href="https://www.shellhacks.com/disable-ssh-host-key-checking/">[英文] 關閉 ssh 連線時的公鑰檢查</a> – gholk</h3><p>ssh 連線為了防止中間人攻擊，預設會檢查對方主機的公鑰以驗證身份，若本機的資料庫中沒有對方的公鑰供檢查，則會主動詢問使用者是否確定該公鑰正確，才進行連線，並將該公鑰加入本機資料庫，以防止未來可能的中間人攻擊。但在使用 ssh 進行 port forwarding 時，常會將對方的伺服器轉發到 localhost 位址，導致 ssh 將 localhost 加入本機的資料庫中。文中使用 ssh_config 中 Host 的萬用字元匹配，來關閉 ssh 對特定位址連線的驗證。</p>
<p>除了文中介紹的在 Host 中使用萬用字元匹配：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host 192.168.* localhost</span><br><span class="line">StrictHostKeyChecking no</span><br><span class="line">UserKnownHostsFile /dev/null</span><br></pre></td></tr></table></figure>

<p>也可以使用 alias 來建立不檢查公鑰的 ssh 命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> f is <span class="keyword">for</span> -f like ln -f, meaning <span class="keyword">do</span> not warning or ask.</span></span><br><span class="line">alias sshf=&#x27;ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="函數式程式設計風格-–-gholk"><a href="#函數式程式設計風格-–-gholk" class="headerlink" title="函數式程式設計風格 – gholk"></a><a href="http://coolshell.cn/articles/10822.html">函數式程式設計風格</a> – gholk</h3><p>近年吹起了一股函數式程式設計風潮，主要是硬體的進步，讓過去已十分完善的理論能實作。文內介紹了各大主流語言中實作的函數式風格，下次不妨嘗試，用函數的方式去思考；描述幹什麼，而非怎麼幹。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #13 - 任何 bug 或 feature 在被觀察前，都處在 feature 與 bug 的疊加態中</title>
    <url>/week13/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="Explain-SQL-command-in-PostgreSQL-–-Rain"><a href="#Explain-SQL-command-in-PostgreSQL-–-Rain" class="headerlink" title="Explain SQL command in PostgreSQL – Rain"></a><a href="https://medium.com/random-life-journal/explain-sql-command-in-postgresql-6b0d50c7bd9a?source=friends_link&sk=2a2d61a8557c30d409d7798536b2d054">Explain SQL command in PostgreSQL</a> – Rain</h3><p>Driven by the curiosity of database tunning, I have taken some time to study how the database planner plans the query strategy this week. This really gave me great inspiration, which makes me pay more attention to how I construct a complex SQL.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="簡單將-node-js-或其它腳本語言的函數包裝成執行檔-–-gholk"><a href="#簡單將-node-js-或其它腳本語言的函數包裝成執行檔-–-gholk" class="headerlink" title="簡單將 node.js 或其它腳本語言的函數包裝成執行檔 – gholk"></a><a href="http://gholk.github.io/linux-wrap-node-js-in-shell.html">簡單將 node.js 或其它腳本語言的函數包裝成執行檔</a> – gholk</h3><p>有時一些 npm 的套件沒有提供命令列的呼叫介面， 或是想用的功能在 node.js 裡就能做到， 懶的另外用 apt 裝可執行檔的程式。 這時就能用 node 的 -e 選項直接執行一小段程式， 可以簡單直接把參數放到指令裡，或透過 argv 傳， 使用上還可以把整段程式設成 alias 或者寫成 shell script。 這種用法也可以適用於 python perl 等其它直譯式語言。</p>
<h3 id="Entropy、Cross-Entropy-與-KL-Divergence-2-–-DC"><a href="#Entropy、Cross-Entropy-與-KL-Divergence-2-–-DC" class="headerlink" title="Entropy、Cross-Entropy 與 KL-Divergence (2)  – DC"></a><a href="https://blog.danielchen.cc/2020/05/20/entropy-cross-entropy-and-KL-divergence-2/">Entropy、Cross-Entropy 與 KL-Divergence (2) </a> – DC</h3><p>延續上一篇 Cross-Entropy 的介紹，本文介紹了 KL-Divergence 以及其直觀解釋、應用、還有相關的問題。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="小议超链接的规范使用-–-gholk"><a href="#小议超链接的规范使用-–-gholk" class="headerlink" title="小议超链接的规范使用 – gholk"></a><a href="https://type.cyhsu.xyz/2020/08/hyperlink-best-practices/">小议超链接的规范使用</a> – gholk</h3><p>超链接是互联网最突出的功能之一，添加超链接也是所有网络用户需要掌握的基本功。然而很多人的使用方式，並不能合理表現出連結網址與連結文字間的關係；常見的誤用是使用了無意義的文字作為連結的文字，如 <em>點擊這裡</em> 、 <em>點我查看</em> 等將操作指示作為連結的文字，或是直接以網址作為文字。google 的文件風格指南中，就指出 <em>链接文本应该「描述读者点击链接后将会看到的内容」，如被引文档的标题或对其内容的描述。</em> 適當的連結用法，不僅符合 HTML 標記式語言的本意，使得文章能被電腦解析，也有利於搜尋引擎對全球資訊網的索引。</p>
<h3 id="Create-Beautiful-Architecture-Diagrams-with-Python-–-Rain"><a href="#Create-Beautiful-Architecture-Diagrams-with-Python-–-Rain" class="headerlink" title="Create Beautiful Architecture Diagrams with Python – Rain"></a><a href="https://towardsdatascience.com/create-beautiful-architecture-diagrams-with-python-7792a1485f97">Create Beautiful Architecture Diagrams with Python</a> – Rain</h3><p>如果是參與過稍微有些規模的服務開發的 Backend 或 SRE，你肯定會經歷過討論系統設計及雲端架構規劃的經驗，其中最痛苦的莫過於繪圖。雖說開會時在白板上畫得自信十足，但一旦要在文件上在畫一份儲存記錄就覺得母湯，更別說後續無數次的微調改動。除了 draw.io 之類徒手拉線的製圖工具外，現在 Python 使用者還多了個程式化產出架構圖的實用工具，讓你免於手腕發炎的惡夢。</p>
<h3 id="純手工打造-ePub-電子書-–-gholk"><a href="#純手工打造-ePub-電子書-–-gholk" class="headerlink" title="純手工打造 ePub 電子書  – gholk"></a><a href="https://blog.darkthread.net/blog/epub-diy/">純手工打造 ePub 電子書 </a> – gholk</h3><p>ePub 電子書對大多數人來說只要開閱讀器能讀就好，即便要製作 ePub 電子書，現成軟體、工具、服務或線上轉換器多不勝數，極少人需要去了解技術細節。如果你對 ePub 結構感到興趣，或希望讀得不開心時有能力自己修正調整，或是想寫程式批次產生或轉換，有上述需求再繼續讀下去。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #14 - 當群星的位置正確時，CCNS 雙周刊就會出刊</title>
    <url>/week14/</url>
    <content><![CDATA[<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="手刻-pygame-矩形碰撞-下篇-未偵測到的碰撞-–-LanKuDot"><a href="#手刻-pygame-矩形碰撞-下篇-未偵測到的碰撞-–-LanKuDot" class="headerlink" title="手刻 pygame 矩形碰撞 (下篇) - 未偵測到的碰撞 – LanKuDot"></a><a href="https://airfishqi.blogspot.com/2020/03/blog-post.html">手刻 pygame 矩形碰撞 (下篇) - 未偵測到的碰撞</a> – LanKuDot</h3><p>是的，當矩形跑的速度又更快的時候，就會出現穿越另一個矩形的奇觀，然後我就開始後悔，為甚麼當初要決定自幹碰撞偵測。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="2020-軟體工程實習求職見聞錄-–-Rain"><a href="#2020-軟體工程實習求職見聞錄-–-Rain" class="headerlink" title="2020 軟體工程實習求職見聞錄 – Rain"></a><a href="https://medium.com/random-life-journal/2020-%E8%BB%9F%E9%AB%94%E5%B7%A5%E7%A8%8B%E5%AF%A6%E7%BF%92%E6%B1%82%E8%81%B7%E8%A6%8B%E8%81%9E%E9%8C%84-d0a9c8c91318?source=friends_link&sk=b9b586adb7f2601e87fca6b49bf95c57">2020 軟體工程實習求職見聞錄</a> – Rain</h3><p>自春季末開始求職以來，大約也經過了半年，期間陸續接觸了近十間軟體企業，拓展了不少眼界。依循著前人「取之於社群，回饋於社群」的精神，我也希望能為產業貢獻一己之力，以一個求職者的視角，分享我親身體驗的軟體企業面試現況。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="使用原檔案的空間壓縮檔案而不佔用額外空間-–-gholk"><a href="#使用原檔案的空間壓縮檔案而不佔用額外空間-–-gholk" class="headerlink" title="使用原檔案的空間壓縮檔案而不佔用額外空間 – gholk"></a><a href="http://gholk.github.io/linux-gzip-inplace-overwrite.html">使用原檔案的空間壓縮檔案而不佔用額外空間</a> – gholk</h3><p>標題想講的是使用 gzip 或其它壓縮程式時 in-place 壓縮，in-place 是指直接改變部份原有檔案內容，不額外佔用空間，如 rsync 有類似的功能。 因為壓縮時輸入的速度理論上會大於輸出， 所以理論上能夠使用 in-place，但 gzip 本身沒有實作此一功能。 配合外部工具的話，可以使用 dd 或者將檔案映射為塊裝置， 使得程式可以 in-place 部份覆寫原有檔案的內容。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="Xpra-GUI-界的-screen-tmux-–-gholk"><a href="#Xpra-GUI-界的-screen-tmux-–-gholk" class="headerlink" title="Xpra: GUI 界的 screen/tmux – gholk"></a><a href="https://nyllep.wordpress.com/2020/09/02/xpra-gui-%e7%95%8c%e7%9a%84-screen-tmux/">Xpra: GUI 界的 screen/tmux</a> – gholk</h3><p>大部分 Linux/BSD 伺服器和桌面的 X Forwarding 功能，一個指令 ssh -X 就可以在伺服器上執行 X 圖形程式，然後把視窗顯示在本地。不過，X forwarding 有一個很大的缺陷：ssh 連線斷掉的時候在遠端執行的應用程式會直接中止。Xpra 就是專門為了解決這個問題而生的，他的用途就像是給純文字界面應用程式使用的 screen 和 tmux 一樣，只是 xpra 是給 X 程式，可以建立一個 session，讓 X 程式跑在裡面，斷線或重新連線時 detach 或 attach 即可。</p>
<h3 id="數據分析軟體超強深度對比：Power-BI是什麼？有哪些優缺點？！-–-Rain"><a href="#數據分析軟體超強深度對比：Power-BI是什麼？有哪些優缺點？！-–-Rain" class="headerlink" title="數據分析軟體超強深度對比：Power BI是什麼？有哪些優缺點？！ – Rain"></a><a href="https://allaboutdataanalysis.medium.com/%E6%95%B8%E6%93%9A%E5%88%86%E6%9E%90%E8%BB%9F%E9%AB%94%E8%B6%85%E5%BC%B7%E6%B7%B1%E5%BA%A6%E5%B0%8D%E6%AF%94-power-bi%E6%98%AF%E4%BB%80%E9%BA%BC-%E6%9C%89%E5%93%AA%E4%BA%9B%E5%84%AA%E7%BC%BA%E9%BB%9E-258fcf4729b8">數據分析軟體超強深度對比：Power BI是什麼？有哪些優缺點？！</a> – Rain</h3><p>Business Intelligence 領域的工具在以往是協助營運、通路、行銷等等宏觀決策的重要洞察工具，並廣泛運用在包含零售、物流、製造等等產生大量數據的產業。近年來隨著資料經濟的興起，這些 BI 工具也不再只限於 C-suite 手中，有越來越多橫跨資料工程與商業分析的人才開始使用相關工具解析每日經手的數據價值，本文中將會介紹日前微軟釋出免費版本的 Power BI 以及新起之秀帆軟的工具比較。</p>
<h3 id="19个神经元控制自动驾驶汽车，MIT等虫脑启发新研究登Nature子刊-–-DC"><a href="#19个神经元控制自动驾驶汽车，MIT等虫脑启发新研究登Nature子刊-–-DC" class="headerlink" title="19个神经元控制自动驾驶汽车，MIT等虫脑启发新研究登Nature子刊 – DC"></a><a href="https://www.jiqizhixin.com/articles/2020-10-30-10">19个神经元控制自动驾驶汽车，MIT等虫脑启发新研究登Nature子刊</a> – DC</h3><p>過去機器學系方法通常需要上百萬個參數才能訓練出一個效能不錯的模型，這篇新的研究模擬線蟲的大腦建構出了一套自動駕駛系統，使用的神經元僅 19 個，參數僅 7 萬個，就做出了相當穩健的模型。這項研究除了提出並推進了新的機器學習方法外，也讓人開始思考線有的機器學習模型是否過於複雜？</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #15 - CCNS 今天要出刊，為了學術用途</title>
    <url>/week15/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="2020-軟體工程實習求職見聞錄-–-Rain"><a href="#2020-軟體工程實習求職見聞錄-–-Rain" class="headerlink" title="2020 軟體工程實習求職見聞錄 – Rain"></a><a href="https://medium.com/random-life-journal/%E4%BA%BA%E5%8A%9B%E8%B3%87%E6%BA%90%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%9A%84%E6%8A%80%E8%83%BD%E8%AA%8D%E8%AD%89%E6%A9%9F%E5%88%B6-1f0b6c0b4044?source=friends_link&sk=bf14fcb65fbd3184fbab5a5dcbc55991">2020 軟體工程實習求職見聞錄</a> – Rain</h3><p>中午吃飯滑手機時收到 CakeResume 的新功能通知，是個程式技能的認證機制，和同行朋友聊了下看法後得出了些有趣的結論，決定寫篇文章來分享一下從一個求職者視角的想法。</p>
<h2 id="專欄-Neo-vim"><a href="#專欄-Neo-vim" class="headerlink" title="[專欄] (Neo)vim"></a>[專欄] (Neo)vim</h2><h3 id="誰說不能在-vim-裡編譯，從-make-到-Make-–-amikai"><a href="#誰說不能在-vim-裡編譯，從-make-到-Make-–-amikai" class="headerlink" title="誰說不能在 vim 裡編譯，從 :make 到 :Make – amikai"></a><a href="https://amikai.github.io/2020/09/10/vim-make/">誰說不能在 vim 裡編譯，從 :make 到 :Make</a> – amikai</h3><p>回想一下，上一次使用 vim 寫 code 到一個段落要編譯時，你是怎麼做的。我看到大多數人的方式，就是將 terminal 切成兩塊，一塊寫 code，一塊編譯，若編譯有錯誤，再移動到寫 code 區塊更改。如果使用此方法，當專案有規模時，編譯錯誤一百條，看了編譯錯誤在哪之後，再將編譯錯誤的位置，從專案裡找出來，反覆來回 100 次，直到修正完畢。本文以 C 語言專案為例 (當然不是只有 C 語言才能這樣子幹，可看 Q&amp;A)，聊聊強大的 vim 在這種情境下有什麼好的解決方案。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="修改二進位執行檔中的-http-請求標頭字串-–-gholk"><a href="#修改二進位執行檔中的-http-請求標頭字串-–-gholk" class="headerlink" title="修改二進位執行檔中的 http 請求標頭字串 – gholk"></a><a href="http://gholk.github.io/linux-binary-patch-http-string.html">修改二進位執行檔中的 http 請求標頭字串</a> – gholk</h3><p>教授計劃中有和廠商買了樹莓派 gnss 接收儀， 但他們提供的程式有錯， 送出的 http request 格式錯誤，使伺服器無法處理。 後來發現可以直接修改執行檔中的字串， 在不改變字串長度的情況下，把空格從開頭移到字位， 就讓 http 標頭格式正確了。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="经典重读：加密先驱与公私钥加密算法的诞生-–-gholk"><a href="#经典重读：加密先驱与公私钥加密算法的诞生-–-gholk" class="headerlink" title="经典重读：加密先驱与公私钥加密算法的诞生 – gholk"></a><a href="https://www.chainnews.com/articles/515943620385.htm">经典重读：加密先驱与公私钥加密算法的诞生</a> – gholk</h3><p>本文原名《加密叛军》，首发于 1993 年 Wired，作者 Steven Levy 也是《黑客》的作者，讲述了一段斗争者如何为网络隐私保护争取绝对隐私、及现今被广泛使用的公私钥加密算法的诞生故事。</p>
<p>在冷戰期間，加密技術被美國政府視為軍事機密，受進出口管制。政策上只允許一般民眾使用有限強度的加密技術，使政府保有最終的竊聽能力。許多密碼學專家也認為，讓民眾能使用公權力無法介入的加密技術，會導致國家安全的崩潰。在如今加密技術已經普及的現代，回顧當初的議題，不乏是有趣的經驗。</p>
<p>文中提到了一種允許司法介入的加密系統，參考自法律中對電話、信件監聽的既有規定。台灣司法中檢察官能向法院申請監聽票，經法官通過後，能從電詁公司、郵政系統中，監聽通訊內容。在允許司法介入的加密系統中，金鑰也會多出一份由受信任的第三方保管，政府能在必要時經合理的程序取得金鑰，而能監聽加密的通訊。</p>
<h3 id="我心目中的理想徵才文-–-Rain"><a href="#我心目中的理想徵才文-–-Rain" class="headerlink" title="我心目中的理想徵才文 – Rain"></a><a href="https://hulitw.medium.com/my-ideal-job-description-d72ec9cf5d0e">我心目中的理想徵才文</a> – Rain</h3><p>作者在經歷過兩次大規模積極求職的經驗後，綜合描述職缺所需要的各個細節，並以徵才者、求職者之間的視角切換，討論如何才能產出一篇吸引人目光的求才公告，並接著促成雙方進一步的認識甚至日後的長期合作。</p>
<h3 id="為什麼原型繼承很重要-–-gholk"><a href="#為什麼原型繼承很重要-–-gholk" class="headerlink" title="為什麼原型繼承很重要 – gholk"></a><a href="http://top.css88.com/archives/717">為什麼原型繼承很重要</a> – gholk</h3><p>JavaScript 的 <strong>原型</strong> 一直都被認為是差勁的設計，最主要的原因是他和主流的 <strong>類</strong> 有本質上的不同，但最初的設計卻又模彷類，造成理解上的困難。這篇文章說明如何 <em>正確使用</em> 原型，並利用原型實作繼承、多重繼承，實現一個事件發射器，與現有的物件合併。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #16 - 會在 Linux/MacOS 用 PuTTY 的都是什麼人</title>
    <url>/week16/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="English-Compose-dependency-injection-with-Uber-Fx-–-Rain"><a href="#English-Compose-dependency-injection-with-Uber-Fx-–-Rain" class="headerlink" title="[English] Compose dependency injection with Uber Fx – Rain"></a><a href="https://medium.com/random-life-journal/compose-dependency-injection-with-uber-fx-300b414d9e9e?source=friends_link&sk=1d8cb11caa0d93fd06ed433bc7f2ecbd">[English] Compose dependency injection with Uber Fx</a> – Rain</h3><p>Consider a well-modulize project structure, we certainly take the advantage of the flexibility which empowers us to change or extend at less limit. Unfortunately, the complexity of communication between modules increases rapidly with the developing process.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="English-Python-RESTful-API-Server-for-Apache-Hive-–-Rain"><a href="#English-Python-RESTful-API-Server-for-Apache-Hive-–-Rain" class="headerlink" title="[English] Python RESTful API Server for Apache Hive – Rain"></a><a href="https://medium.com/random-technical-note/python-restful-api-server-for-apache-hive-6bc52ad991ba?source=friends_link&sk=3300b7ed443f8e59e8d5220b4fa4cc4b">[English] Python RESTful API Server for Apache Hive</a> – Rain</h3><p>Continue from the previous note Associate Apache Hive Client with HDFS, this time I will share the design and implementation of RESTful API Server, which will act as an interface for user access Apache Hive without raw sql command.</p>
<h3 id="以-pv-控制-pipe-的速度-–-gholk"><a href="#以-pv-控制-pipe-的速度-–-gholk" class="headerlink" title="以 pv 控制 pipe 的速度 – gholk"></a><a href="http://gholk.github.io/shell-pipe-speed-pv.html">以 pv 控制 pipe 的速度</a> – gholk</h3><p>因為想控制某些程式的傳輸速度， 所以想找找看有沒有 linux 命令 能像節流閥那樣串在管道中就能限制通過的流量， 就找到一個叫 pv 的小工具， 不只是節流閥，還可以做流量統計。 隔天想想其實也可以自己用 shell script 寫一個土炮版本的。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="System-Design-Chapter-10-CAP-Theorem-–-Rain"><a href="#System-Design-Chapter-10-CAP-Theorem-–-Rain" class="headerlink" title="System Design, Chapter 10: CAP Theorem – Rain"></a><a href="https://medium.com/system-designing-interviews/system-design-chapter-10-cap-theorem-ce9624703835">System Design, Chapter 10: CAP Theorem</a> – Rain</h3><p>完美的解決方案並不存在，只有最合適的方案，在軟體工程中我們往往得面臨無數的決策與取捨，找出通往成功的道路。文中作者以資料庫系統的設計為例，探討如何在一致性 (Consistency)、可用性 (Availability)與局部容錯性 (Partition-tolerance) 之間進行抉擇，並簡述無法三者皆得的技術瓶頸和任兩者之間組合所瞄準的技術目標。</p>
<h3 id="Linux-kernel-的編譯-–-gholk"><a href="#Linux-kernel-的編譯-–-gholk" class="headerlink" title="Linux kernel 的編譯 – gholk"></a><a href="http://yowlab.shps.kh.edu.tw/wordpress/?p=2914">Linux kernel 的編譯</a> – gholk</h3><p>為了能支援手頭的硬體設備，編譯一下 Linux Kernel 也是一件很樸實無華，普通平常的事，工程的快樂就是這麼樸實無華且枯燥。</p>
<h3 id="豐富開源社群組成，從建立友善多元族群的安全網做起"><a href="#豐富開源社群組成，從建立友善多元族群的安全網做起" class="headerlink" title="豐富開源社群組成，從建立友善多元族群的安全網做起"></a><a href="https://lab.ocf.tw/2020/10/20/coc/">豐富開源社群組成，從建立友善多元族群的安全網做起</a></h3><p>在台灣，開源社群或許已較主流社會對多元專長、立場以及性傾向的參與者更友善，但組成仍以男性、異性戀、技術取向等背景居多。光是女性在開源專案的參與率，僅在過去十年間微幅上升 1.5% 到 3%，以著名的維基百科為例，九成的編輯者為男性，難以反映女性觀點；遑論在性傾向、宗教等不同背景的少數族群參與率。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #17 - Unix 是簡單的，但只有天才才能理解這種簡單</title>
    <url>/week17/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="English-Integrate-Stripe-with-Python-Django-Elegantly-–-Rain"><a href="#English-Integrate-Stripe-with-Python-Django-Elegantly-–-Rain" class="headerlink" title="[English] Integrate Stripe with Python Django Elegantly – Rain"></a><a href="https://medium.com/random-life-journal/integrate-stripe-with-python-django-elegantly-f0c4848f2b13?source=friends_link&sk=e9dbec14fe7048c04d0db90d8b8df296">[English] Integrate Stripe with Python Django Elegantly</a> – Rain</h3><p>Recently I was responsible for the integration of Stripe online payment service, and take some notes about workflow planning and SDK usage details. Stripe would be highly recommended for the payment tasks due to its software-engineering-friendly SDK, the succinct interface and complete documentation also helpful during my development.</p>
<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="來作遊戲阿-EP-1-系列簡介-LanKuDot"><a href="#來作遊戲阿-EP-1-系列簡介-LanKuDot" class="headerlink" title="來作遊戲阿 - EP. 1 系列簡介 - LanKuDot"></a><a href="https://youtu.be/SAM1_CcvPDI">來作遊戲阿 - EP. 1 系列簡介</a> - LanKuDot</h3><p>在朋友的建議下，嘗試使用影片來紀錄這次開發遊戲的過程與心得，用教學的方式，介紹元件與如何在遊戲中使用。本集簡介「來作遊戲啊」這系列的內容：以製作 NieR 9S 的駭客小遊戲為主題，紀錄遊戲開發過程，也藉此分享 Unity 的使用心得</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="CentOS-再見，但，CentOS-Stream-真有那麼不堪嗎-–-r2"><a href="#CentOS-再見，但，CentOS-Stream-真有那麼不堪嗎-–-r2" class="headerlink" title="CentOS 再見，但，CentOS Stream 真有那麼不堪嗎? – r2"></a><a href="https://sean0921.github.io/2020/12/10/centos-stream-replace-centos-8/">CentOS 再見，但，CentOS Stream 真有那麼不堪嗎?</a> – r2</h3><p>自從 2020/12/8 CentOS blog 和 Mailing list 相繼宣佈將要轉移開發重心到 CentOS Stream 上，並計劃要讓 CentOS 8.x (有版號的 release) 提前退休後，網路上罵聲一片。甚至有報導直接了當評論紅帽做了錯誤的舉動。本篇文章將從 RHEL/CentOS 版號意義，更新流程來釐清社群對於 CentOS Stream 的相關疑慮，以及這樣改變的必要性</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="真．資料團隊與分工-–-DC"><a href="#真．資料團隊與分工-–-DC" class="headerlink" title="真．資料團隊與分工 – DC"></a><a href="https://blog.v123582.tw/2020/10/31/%E7%9C%9F%E3%83%BB%E8%B3%87%E6%96%99%E5%9C%98%E9%9A%8A%E8%88%87%E5%88%86%E5%B7%A5/">真．資料團隊與分工</a> – DC</h3><p>在整個資料科學/機器學習商業應用的情境中通常橫跨了不同的領域與專業，因此在實際的環境下一個專案需要比一般的應用更多的人合作來完成，本文介紹了根據作者自己本身經驗所統整出的資料科學團隊分工。</p>
<h3 id="tinyTorrent-从头写一个-Deno-的-BitTorrent-下载器-–-gholk"><a href="#tinyTorrent-从头写一个-Deno-的-BitTorrent-下载器-–-gholk" class="headerlink" title="tinyTorrent: 从头写一个 Deno 的 BitTorrent 下载器 – gholk"></a><a href="https://cjting.me/2020/10/31/tinytorrent-a-deno-bt-downloader/">tinyTorrent: 从头写一个 Deno 的 BitTorrent 下载器</a> – gholk</h3><p>bit torrent 是一種 p2p 的檔案分享協議，可以解決中心伺服器在下載量過大時頻寬負擔過重的問題。Jesse Li 的 <a href="https://blog.jse.li/posts/torrent/">Building a BitTorrent client from the ground up in Go</a> 讲述了如何用 Go 开发一个 BT 的下载器。内容涉及到 BT 协议以及下载器的代码设计，思路清晰，值得一读。作者因此受到啟發，也自己用 deno 開發了一個 bit torrent 下載器，練習 deno 的使用。</p>
<h3 id="金融保險科技公司-OneDegree-工作半年心得-–-Rain"><a href="#金融保險科技公司-OneDegree-工作半年心得-–-Rain" class="headerlink" title="金融保險科技公司 OneDegree 工作半年心得 – Rain"></a><a href="https://hulitw.medium.com/working-at-onedegree-378a0401130e">金融保險科技公司 OneDegree 工作半年心得</a> – Rain</h3><p>作者 Huli 為已有多年經驗的前端工程師，時常透過寫作分享在軟體工程成長之路上的所見所聞。即使對於技術已經頗有深入研究，其文筆仍能寫的淺顯易懂讓各個等級的讀者都頗有共鳴，強烈推薦對於工作煩惱或是職涯發展議題感興趣的讀者閱讀。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #18 - 延期機率沒有達到百分之五十的周刊是沒有未來的</title>
    <url>/week18/</url>
    <content><![CDATA[<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="來作遊戲阿-EP-2-思考遊戲機制，找出功能-LanKuDot"><a href="#來作遊戲阿-EP-2-思考遊戲機制，找出功能-LanKuDot" class="headerlink" title="來作遊戲阿 - EP. 2 思考遊戲機制，找出功能 - LanKuDot"></a><a href="https://youtu.be/AgCrHtz2yOs">來作遊戲阿 - EP. 2 思考遊戲機制，找出功能</a> - LanKuDot</h3><p>在上一集確定遊戲製作的目標後，接著就是找出實現遊戲機制所需要的功能，但別急著想到什麼就作什麼，先坐下來，好好規劃，找出要作的功能，才方便規劃實作順序</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="在-shell-中管理檔案描述符-–-gholk"><a href="#在-shell-中管理檔案描述符-–-gholk" class="headerlink" title="在 shell 中管理檔案描述符 – gholk"></a><a href="http://gholk.github.io/shell-file-descriptor-eval.html">在 shell 中管理檔案描述符</a> – gholk</h3><p>linux shell 中可以使用 0 到 9 的 file descriptor 檔案描述符來控制程式的輸入與輸出，但一些使用並不好理解。 例如重導向的順序不好理解，要將 fd 存在變數時得用到 eval， 或要測試一個 fd 有無被佔用時，只能直接嘗試重導向檢查有無錯誤。</p>
<h3 id="在-neo-vim-裡-C-語言程式碼導覽技巧-–-amikai"><a href="#在-neo-vim-裡-C-語言程式碼導覽技巧-–-amikai" class="headerlink" title="在 (neo) vim 裡 C 語言程式碼導覽技巧 – amikai"></a><a href="https://amikai.github.io/2020/11/28/vim-c-env-move/">在 (neo) vim 裡 C 語言程式碼導覽技巧</a> – amikai</h3><p>現代的專案開發，很少在從無到有打造，大部分都是基於現有的程式之上繼續開發或維護，進入專案之後，通常第一件事就是大量閱讀程式碼理清專案的整個脈絡，才開始著手寫 code，所以好的程式碼導覽技巧將會帶你上天堂。此篇文章將程式碼導覽情境大致拆成了三種情況，並一一去討論，希望能快速帶你學會 C 語言程式碼導覽。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="電死人-是電壓還是電流-觸電推理-–-gholk"><a href="#電死人-是電壓還是電流-觸電推理-–-gholk" class="headerlink" title="電死人 是電壓還是電流? 觸電推理 – gholk"></a><a href="https://www.strongpilab.com/current-kills-people/">電死人 是電壓還是電流? 觸電推理</a> – gholk</h3><p>每過一段時間總會有人提問，到底是電壓還是電流會 電死人? 這個題目很簡單，只是答案不簡單，有好幾個層面可以討論。從表層討論到核心，答案可能都會不太一樣，這次我會直接討論核心，之後再從核心的結論往表層推論，這樣就可以得到那些看起來似乎不同的答案，其實骨子裡都是一樣的東西。</p>
<p>由於討論的過程中所牽涉到的實作，都是用看的就可以知道的結論，所以我們不需要真的去做，只需要用想像的就足夠，因此看起來會有點偏理論，準備好的話，那我們就開始囉，先來聽聽各派的說法。</p>
<h3 id="Minimal-safe-Bash-script-template-–-Rain"><a href="#Minimal-safe-Bash-script-template-–-Rain" class="headerlink" title="Minimal safe Bash script template – Rain"></a><a href="https://betterdev.blog/minimal-safe-bash-script-template/?fbclid=IwAR17YYI1q8pwTZ0wky-en_vx8iQa8QHFsN4S6lZ5FsRpFFypIm7jTwpy9rA">Minimal safe Bash script template</a> – Rain</h3><p>Bach scripts 對於工程師來說可說是輕量又方便的工具，不論是連接不同程式的輸入與輸出、在 CI CD 中連接多個步驟之間的膠水程式、或是把一連串啟動程式的指令打包好都相當的實用。但是 Bash scripts 在撰寫上並沒有太過於嚴格的規範，大多數人也都僅止於執行結果正確的階段而已，但這很可能在不知不覺中對系統持續造成負面影響，比如沒有被好好處理的錯誤以及四散的中間產物檔案等等。作者透過一個簡潔的 Bash scripts template 來舉例，一一探討在撰寫時有哪些需要注意的細節。</p>
<h3 id="神奇的-lambda-表達式-–-gholk"><a href="#神奇的-lambda-表達式-–-gholk" class="headerlink" title="神奇的 &lambda; 表達式 – gholk"></a><a href="http://www.jianshu.com/p/e7db2f50b012">神奇的 &lambda; 表達式</a> – gholk</h3><p>&lambda; 表達式是函數式程式設計中的核心觀念。在 &lambda; 系統中，每個表達式都是一個函數，也只接受一個函數作為參數，並返回一個單參的函數。透過 &lambda; 表達式，邱奇在 1936 年證明出 <strong>判定性問題</strong> 是無法解決的。（以上文字參考自維基百科，但不要看維基的解釋，那不是學數學或程式語言的根本看不懂。）讓我們透過本文一窺如何利用 &lambda; 表達式描述、證明問題。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #19 - 新年快樂！復刊愉快！</title>
    <url>/week19/</url>
    <content><![CDATA[<p>新年快樂！很高興(?)本刊經歷了第一次無預警休刊，經歷了一番努力我們成功復刊了！！！但不止如此，我們這次帶來了我們第一篇特別篇，<a href="/sp1/" title="CCNS Weekly #Sp1 CCNS 2020 回顧">CCNS Weekly #Sp1 CCNS 2020 回顧</a>，一起來看看 CCNS 2020 年做了些什麼吧！</p>
<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="來作遊戲阿-EP-3-角色動起來-Character-Controller-–-LanKuDot"><a href="#來作遊戲阿-EP-3-角色動起來-Character-Controller-–-LanKuDot" class="headerlink" title="來作遊戲阿 EP.3 - 角色動起來 Character Controller – LanKuDot"></a><a href="https://youtu.be/DumPGt7jz-g">來作遊戲阿 EP.3 - 角色動起來 Character Controller</a> – LanKuDot</h3><p>想要製作跑得很快卻可以突然轉彎或是忽然停下來，這類不符合真實物理，卻在遊戲中很合理的動作，Character Controller 就是個好選擇。本集介紹 Character Controller 的特性，與如何在遊戲中控制它。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="ZDI-20-1440-Writeup-–-HexRabbit"><a href="#ZDI-20-1440-Writeup-–-HexRabbit" class="headerlink" title="ZDI-20-1440 Writeup – HexRabbit"></a><a href="https://blog.hexrabbit.io/2021/02/07/ZDI-20-1440-writeup/">ZDI-20-1440 Writeup</a> – HexRabbit</h3><p>ZDI-20-1440 是一個位於 linux kernel 中 extended Berkeley Packet Filter (eBPF) verifier 的驗證繞過漏洞，筆者在文中詳細介紹了該漏洞的利用細節以及攻擊手法，並於文章最後給出一個能夠達成本地提權的 PoC exploit。</p>
<h3 id="使用-rtklib-str2str-串流資料-–-gholk"><a href="#使用-rtklib-str2str-串流資料-–-gholk" class="headerlink" title="使用 rtklib str2str 串流資料 – gholk"></a><a href="http://gholk.github.io/gnss-rtklib-str2str-stream-usage.html">使用 rtklib str2str 串流資料</a> – gholk</h3><p>rtklib 中用作資料串流的工具為 gui 介面的 strsvr 與 cli 介面的 str2str。 但 str2str 欠缺說明，入門時我根本不會用， 後來才漸漸試出 tcp 傳資料、記錄到檔案、 時間戳、雙向資料連結等功能。 同時本文也記錄使用上的一些問題， 像型別差異導致的 time tag 格式不相容， 與連接 serial 時會掉資料的問題。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="Control-your-kubernetes-deployment-with-argo-rollouts-–-Rain"><a href="#Control-your-kubernetes-deployment-with-argo-rollouts-–-Rain" class="headerlink" title="Control your kubernetes deployment with argo rollouts – Rain"></a><a href="https://medium.com/@ptran32/control-your-kubernetes-deployment-with-argo-rollouts-adb54c4e9b7d">Control your kubernetes deployment with argo rollouts</a> – Rain</h3><p>有鑒於一次性全面的版本提升實在太容易導致大規模的災難，許多更為平滑且可控的升版佈署策略被提出且受到大量的關注與討論，同時也有許多實作了佈署策略使其更為方便使用的工具陸續問世。文中將會透過 Argo Rollouts 這套工具以及 k8s cluster，分別演示 Canary 以及 Blue-Green Deployment 兩套佈署策略。</p>
<h3 id="英文-你所不知道的-git-最強功能-git-worktree-–-gholk"><a href="#英文-你所不知道的-git-最強功能-git-worktree-–-gholk" class="headerlink" title="[英文] 你所不知道的 git 最強功能 git worktree – gholk"></a><a href="https://medium.com/swlh/git-worktrees-the-best-git-feature-youve-never-heard-of-9cd21df67baf">[英文] 你所不知道的 git 最強功能 git worktree</a> – gholk</h3><p>不少人都有頻繁在多個 git 分支間切換，在修複 bug 、添加新功能、對同事的改動 code review 間切換的經驗。切換間你需要保存當下尚未提交的更改，以前你可能用 stash ，但超過二個以上的 stash 難以管理。另一項技巧是使用本機的 clone ，一種十分古老的 git 技巧；但要在不同資料夾間維護相同的 git config 十分麻煩。worktree 則可以讓一個 git 專案 <em>分身</em> 出不同子資料夾，分別代表不同的分支。</p>
<h3 id="授權流言終結者-2-The-JSON-License-的分析與探討-–-gholk"><a href="#授權流言終結者-2-The-JSON-License-的分析與探討-–-gholk" class="headerlink" title="授權流言終結者#2: The JSON License 的分析與探討 – gholk"></a><a href="https://blog.gcos.me/post/2012-05-03_opensource_myth_buster_2_json_license/">授權流言終結者#2: The JSON License 的分析與探討</a> – gholk</h3><p>the json license 並不符合自由軟體授權或開放原始碼授權，因為其中包含了 <em>The Software shall be used for Good, not Evil.</em> 違反自由軟體的可以在任何情況下使用軟體的自由。<a href="https://blog.gcos.me/tags/license/page/2/">該部落格中的 #license 標籤</a> 中有多篇文章探討軟體授權的相關議題，有興趣者可以參考。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #2 - 證明真的能雙周出刊的第二期雙周刊</title>
    <url>/week2/</url>
    <content><![CDATA[<p>這週延續創刊號的第一個專欄，我們帶來了在 Arch Linux 底下除了 grub 以外的 booting loader，此外還有 Mac 上的 Python 環境管理、 Linux 上 IO Redirection 介紹以及文章分享，歡迎大家閱讀轉發！</p>
<h2 id="專欄-SRE-Works"><a href="#專欄-SRE-Works" class="headerlink" title="[專欄] SRE Works"></a>[專欄] SRE Works</h2><h3 id="English-Use-systemd-boot-instead-of-grub-in-Arch-Linux-–-TsundereChen"><a href="#English-Use-systemd-boot-instead-of-grub-in-Arch-Linux-–-TsundereChen" class="headerlink" title="[English] Use systemd-boot instead of grub in Arch Linux – TsundereChen"></a><a href="https://blog.tsunderechen.io/2020/05/archlinux-systemd-boot-installation/">[English] Use systemd-boot instead of grub in Arch Linux</a> – TsundereChen</h3><p>Are you tired of using grub in your system? or you just can’t get grub working on your computer? Try systemd-boot, a boot loader not only easy to install, but also easy to configure.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="English-Set-up-Python-environment-correctly-on-Mac-–-Rain"><a href="#English-Set-up-Python-environment-correctly-on-Mac-–-Rain" class="headerlink" title="[English] Set up Python environment correctly on Mac – Rain"></a><a href="https://medium.com/random-technical-note/set-up-python-environment-correctly-on-mac-db97e481dc5a?sk=47731d47f7a5ee17c53bc73d38828657">[English] Set up Python environment correctly on Mac</a> – Rain</h3><p>Yesterday I got my new notebook and start migrating from the old one, it means I have a chance to setting up developing environment in a brand new device. It’s an important issue that affects the future development experience, I will share my approach in this article and hope it can help you.</p>
<h3 id="玩弄重導向的正確姿勢-–-HexRabbit"><a href="#玩弄重導向的正確姿勢-–-HexRabbit" class="headerlink" title="玩弄重導向的正確姿勢 – HexRabbit"></a><a href="https://blog.hexrabbit.io/2019/10/22/Redirection-in-bash/">玩弄重導向的正確姿勢</a> – HexRabbit</h3><p>是不是厭倦了每次 reverse shell 都要上網抄 script，但從來不懂他是如何運作的？讓本文帶著你一窺 bash 重導向的箇中奧妙，踏出成為 bash master 的第一步</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="經典線性代數教材《Linear-Algebra-Done-Right》開放免費下載-–-DC"><a href="#經典線性代數教材《Linear-Algebra-Done-Right》開放免費下載-–-DC" class="headerlink" title="經典線性代數教材《Linear Algebra Done Right》開放免費下載 – DC"></a><a href="https://www.qbitai.com/2020/05/14021.html">經典線性代數教材《Linear Algebra Done Right》開放免費下載</a> – DC</h3><p>許多美國名校都使用的經典線代教材 LADR 現在在 Springerlink 上開放免費下載至 7 月底！</p>
<h3 id="推力-—-每一個產品人都是選擇設計師-–-Rain"><a href="#推力-—-每一個產品人都是選擇設計師-–-Rain" class="headerlink" title="推力 — 每一個產品人都是選擇設計師 – Rain"></a><a href="https://medium.com/as-a-product-designer/nudge-in-design-7e9d2c95e251">推力 — 每一個產品人都是選擇設計師</a> – Rain</h3><p>使用者在使用產品的過程中充滿著各種選擇，若你身為產品設計師，該如合善用巧勁將使用者推向目標選項呢?</p>
<h3 id="從駭客角度告訴你為何不要隨意複製指令-–-gholk"><a href="#從駭客角度告訴你為何不要隨意複製指令-–-gholk" class="headerlink" title="從駭客角度告訴你為何不要隨意複製指令 – gholk"></a><a href="https://yiyu0x.github.io/2020/03/16/%E5%BE%9E%E9%A7%AD%E5%AE%A2%E8%A7%92%E5%BA%A6%E5%91%8A%E8%A8%B4%E4%BD%A0%E7%82%BA%E4%BD%95%E4%B8%8D%E8%A6%81%E9%9A%A8%E6%84%8F%E8%A4%87%E8%A3%BD%E6%8C%87%E4%BB%A4/">從駭客角度告訴你為何不要隨意複製指令</a> – gholk</h3><p>文中除了介紹用 base64 讓惡意指令難以辨識，<br>還提到使用 dom 的 copy 事件，<br>甚至可以在複製時修改使用者複製的內容。<br>只要在複製時將內容修改為惡意指令，再在結尾附加上換行符，<br>直接貼到終端機中執行時，就可能執行到惡意指令。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #20 - less is better than more</title>
    <url>/week20/</url>
    <content><![CDATA[<h2 id="專欄-Game"><a href="#專欄-Game" class="headerlink" title="[專欄] Game"></a>[專欄] Game</h2><h3 id="來作遊戲阿-EP-4-控制角色-Input-System-–-LanKuDot"><a href="#來作遊戲阿-EP-4-控制角色-Input-System-–-LanKuDot" class="headerlink" title="來作遊戲阿 EP.4 - 控制角色 Input System – LanKuDot"></a><a href="https://youtu.be/oECT4oKKPWY">來作遊戲阿 EP.4 - 控制角色 Input System</a> – LanKuDot</h3><p>Input System 是 Unity 新的輸入控制套件，比起舊版的 Input Manager 更容易設定也更直覺，支援多種常見的控制方式，另外 Input System 能自行判斷動作的發生，並呼叫綁定的對應事件，讓開發者能夠專注在事件發生後的事情就好。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="Debian-最新版-non-free-韌體安裝筆記-–-r2"><a href="#Debian-最新版-non-free-韌體安裝筆記-–-r2" class="headerlink" title="Debian 最新版 non-free 韌體安裝筆記 – r2"></a><a href="https://sean0921.github.io/2020/09/12/debian-firmware-nonfree/">Debian 最新版 non-free 韌體安裝筆記</a> – r2</h3><p>在使用 Debian GNU/Linux 這個發行版時，我們想要在兼顧穩定的特性下使用版本較新的套件，這時候 backports 就是一個被官方社群支援的選項。然而有時我們還是會遇到裝了新版 backport kernel, <em>non-free</em> (非開源授權的)韌體內容找不到的問題。除了 Bug Report 回報給相關社群之外，在等待的期間還可以做哪些處置來兼顧新版套件安裝與後續套件管理(apt)支援? 以這個例子為作爲起點，我們可以利用 Debian Salsa 的 GitLab 資源來協助我們參閱，甚至自己 backport 測試中或已經釋出的打包腳本。</p>
<h3 id="筆記-Dockerfile-Multi-stage-build-筆記"><a href="#筆記-Dockerfile-Multi-stage-build-筆記" class="headerlink" title="[筆記] Dockerfile - Multi-stage build 筆記"></a><a href="https://amikai.github.io/2021/03/01/docker-multi-stage-build/">[筆記] Dockerfile - Multi-stage build 筆記</a></h3><p>docker 在專案部署上解掉了環境不同所多出的成本和問題。除了部署之外， 專案開發流程複雜時，團隊也可以使用 docker 統一開發流程，加速開發的速度。</p>
<p>此篇將以 go 語言專案為例，使用 docker 對此專案進行代碼檢查、測試、編譯，從建構最簡單的 Dockerfile 撰寫起，一步一步從版本一改善到版本三也就是 multi-stage build 的版本。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="17LIVE-Next-Gen-Database-選型分析-–-Rain"><a href="#17LIVE-Next-Gen-Database-選型分析-–-Rain" class="headerlink" title="17LIVE Next-Gen Database 選型分析 – Rain"></a><a href="https://medium.com/17media-tech/17live-next-gen-database-%E9%81%B8%E5%9E%8B%E5%88%86%E6%9E%90-7a72b976cd2b">17LIVE Next-Gen Database 選型分析</a> – Rain</h3><p>如果你不是個只會 CRUD 的 Database 菜雞的話，你應該有遇過許多在 Data Storage 上 OLTP、OLAP、Horizontal-Scalibility、Replication、ACID 等等各方面特性與實作方式的問題與研究。然而 Database 一旦上線開始接收 Production 資料後，便會因為資料丟失或結構被破壞的風險導致無法輕易更換技術，這意味著我們需要在初期投入足夠的時間來思考何種 Database 與團隊當時的情境和未來的發展方向最為相符。文中的作者以在 17 Media 服務經驗，比較目前生態系中多種被採用的 Databse 以及分享自身在工作時的情境會如何做選擇。</p>
<h3 id="英文-ninja-簡易編譯系統介紹-–-gholk"><a href="#英文-ninja-簡易編譯系統介紹-–-gholk" class="headerlink" title="[英文] ninja: 簡易編譯系統介紹 – gholk"></a><a href="https://jvns.ca/blog/2020/10/26/ninja--a-simple-way-to-do-builds/">[英文] ninja: 簡易編譯系統介紹</a> – gholk</h3><p>對 ninja 漸進式編譯系統的簡單介紹。如果你覺得 make 太複雜，那可以試試現代的編譯工具 ninja。ninja 如同 make 與 autoconf，也有許多工具如 meson，是產生 ninja 的程式作為輸出，再用 ninja 編譯出最終結果。</p>
<h3 id="Google-Chrome-的顯示完整-URL-的方式又改了…-–-DC"><a href="#Google-Chrome-的顯示完整-URL-的方式又改了…-–-DC" class="headerlink" title="Google Chrome 的顯示完整 URL 的方式又改了… – DC"></a><a href="https://blog.gslin.org/archives/2020/10/17/9754/google-chrome-%e7%9a%84%e9%a1%af%e7%a4%ba%e5%ae%8c%e6%95%b4-url-%e7%9a%84%e6%96%b9%e5%bc%8f%e5%8f%88%e6%94%b9%e4%ba%86/">Google Chrome 的顯示完整 URL 的方式又改了…</a> – DC</h3><p>google 爸爸覺得讓使用者看到長長一串網址太危險了，網址複雜的語法可能會引起一般人的程式恐慌症，所以一直嘗試要把網址以更 <em>安全</em> <em>易懂</em> 的方式顯示。這次 google 的新點子是把網址列最前面的協議名稱和 www 子域名藏起來。文中除了靠北 google，也介紹如何關掉這個功能 (<del>bug</del> feature)。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #21 - 如果商品免費，那其實你才是「商品」</title>
    <url>/week21/</url>
    <content><![CDATA[<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="使用-tor-代理-dns-查詢-–-Gholk"><a href="#使用-tor-代理-dns-查詢-–-Gholk" class="headerlink" title="使用 tor 代理 dns 查詢 – Gholk"></a><a href="https://gholk.github.io/tor-dns-howto.html">使用 tor 代理 dns 查詢</a> – Gholk</h3><p>近年大眾開始關心明文 dns 查詢時造成的隱私洩露問題，tor 網路具有代理 dns 查詢的功能，能夠將 dns 查詢流量去識別化。但由於權限問題，有時這個 tor dns 沒辦法開在 dns 慣例的 53 埠，在 android 上可以藉由 <a href="https://play.google.com/store/apps/details?id=com.frostnerd.dnschanger">DNSChanger</a> 修改 dns server 為 localhost:5353，而 debian 上我還沒找到方法讓系統走非標準埠，所以作法是直接讓 tor 開在 53。</p>
<h3 id="Mock-out-dependencies-while-testing-in-Python"><a href="#Mock-out-dependencies-while-testing-in-Python" class="headerlink" title="Mock out dependencies while testing in Python"></a><a href="https://speakerdeck.com/rainrainwu/mock-out-dependencies-while-testing-in-python">Mock out dependencies while testing in Python</a></h3><p>在近代軟體開發流程中，我們時常會需要透過執行測試來確保程式運作的正確性，其中不乏大家耳熟能詳的 unit test, integration test 等等。但測試的本質仍是檢測程式執行完後的結果，其中相關的邏輯都是會被執行到的，然而這在商業運轉中卻衍生了許多問題。比如測試時頻繁呼叫到需要付費的第三方 API, 連接與其他為服務共用的資料庫，抑或是執行檔案刪除或是上傳等等較難以回溯的操作。本篇文章為 CCNS 109 下學期期初社員大會中的小型社課，講者將會介紹在測試時有效利用依賴注入的技巧隔離測試邏輯，以避免各種悲劇狀況的技巧以及適用尚需注意的風險</p>
<p><a href="https://github.com/RainrainWu/python_async_lab">GitHub Repo</a></p>
<p><a href="https://speakerdeck.com/rainrainwu/mock-out-dependencies-while-testing-in-python">Slides</a></p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="被跨平台作者忽略的標準連結【一】：為什麼標準連結仍然重要-–-gholk"><a href="#被跨平台作者忽略的標準連結【一】：為什麼標準連結仍然重要-–-gholk" class="headerlink" title="被跨平台作者忽略的標準連結【一】：為什麼標準連結仍然重要 – gholk"></a><a href="https://leafwind.tw/2018/10/13/why-canonical-link-is-still-important/#%E9%82%A3%E4%BB%80%E9%BA%BC%E6%98%AF%E6%A8%99%E6%BA%96%E9%80%A3%E7%B5%90%EF%BC%88Canonical_Link%EF%BC%89%EF%BC%9F">被跨平台作者忽略的標準連結【一】：為什麼標準連結仍然重要</a> – gholk</h3><p>當內容一樣的網頁存在很多個的時候，搜尋引擎並不知道哪個網址才是真正的「原文網址」。這時候搜尋引擎必須要決定誰是那個唯一的網址，就叫做標準網址，而指向它的連結就是標準連結。標準連結可以用來解決跨站發布被搜尋引擎重複索引的問題。</p>
<p>跨站發佈例如，在 WordPress 發了文章，又複製貼上到 Medium，臉書也貼一份全文，最後匯流媒體再邀稿，放到他們的網站上，這樣對 Google 來說就有四份一樣的內容存在網路上。這時候問題來了，Google 知道這些內容都一樣，但它希望使用者搜尋的時候，同樣的內容只出現一次就好，而不是一次顯示四篇同樣的文章（甚至其中還有些是農場抄襲的），於是你可能會看到搜尋結果出現：為了提供關聯性最高的搜尋結果，我們省略了部份與先前 160 筆已經顯示過的結果非常類似的項目。</p>
<h3 id="Introduction-to-modern-network-load-balancing-and-proxying"><a href="#Introduction-to-modern-network-load-balancing-and-proxying" class="headerlink" title="Introduction to modern network load balancing and proxying"></a><a href="https://blog.envoyproxy.io/introduction-to-modern-network-load-balancing-and-proxying-a57f6ff80236">Introduction to modern network load balancing and proxying</a></h3><p>隨著軟體服務的規模與量體越趨龐大，基於水平擴展、部分容錯以及效能上的需求，許多服務採用了多節點的方式組成 Cluster 加以應對。為了能實現最理想且穩定的工作量分流，負責接收所有流量並加以轉發的 Load Balancer 成了一大焦點，其選擇流量轉發節點的演算法大大的影響 Clustering 方案是否有效發揮其作用。本篇文章作者將從 Load Balancing 的原理開始，逐步拆解 L4, L7 負載平衡的限制與差異，同時點出諸如 multiple requests in one connection, sticky session 等等多種在 Clustering 策略下所潛藏的問題及解決方案。</p>
<h3 id="Neovim-Vimconf-live-Neovim-Builtin-LSP-–-amikai"><a href="#Neovim-Vimconf-live-Neovim-Builtin-LSP-–-amikai" class="headerlink" title="[Neovim]Vimconf.live: Neovim Builtin LSP – amikai"></a><a href="https://www.youtube.com/watch?v=C9X5VF9ASac">[Neovim]Vimconf.live: Neovim Builtin LSP</a> – amikai</h3><p>在網路上偶然看到 Vimconf.live 2020 ，或許是因為疫情的關係，此 conf 皆是遠端演講。其中我最感興趣的是 TJ DeVries 的這場演講，不再是講老套的 vim 議題，而是帶你快速了解 neovim builtin LSP 的歷史、設計哲學、以及使用方式。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #22 - 自由不是離開某套軟體、某種系統，而是找到自由</title>
    <url>/week22/</url>
    <content><![CDATA[<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="9-分鐘架一個-PttBBS-r2"><a href="#9-分鐘架一個-PttBBS-r2" class="headerlink" title="9 分鐘架一個 PttBBS - r2"></a><a href="https://hackmd.io/@holishing/S1pkRG0NO/">9 分鐘架一個 PttBBS</a> - r2</h3><p>本簡報目的是用更簡潔明瞭的方式，讓沒碰過 Linux 或碰過但對於一般 BBS 架站欠缺經驗的使用者，初步體驗把一個 BBS 站架起來原來是那麼簡潔且樸實無華，也希望藉此提升更多人參與 PttBBS 開源專案的意願，讓這個非營利性質的專案與相關 BBS 生態能夠延續下去</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="Amadues-–-raiso"><a href="#Amadues-–-raiso" class="headerlink" title="Amadues – raiso"></a><a href="https://docs.google.com/presentation/d/1lx_vdd3SxNX4uAPoDHfTBav2Pfd7Y1Km/edit#slide=id.p10">Amadues</a> – raiso</h3><blockquote>
<p>從妄想中我們可以預知未來<br>從現在起我們可以建構未來<br>然而這個名為未來的漸近線<br>會來？</p>
</blockquote>
<p>本篇簡報為 CCNS 109 學年下學期的定期聚演講內容，講者將會介紹自己所知道的腦科學進展。內容包括：有名的實驗、神經元模型、收集訊號的方式、Spiking Neural Network。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="Vim-You-don’t-need-more-than-one-cursor-in-vim-amikai"><a href="#Vim-You-don’t-need-more-than-one-cursor-in-vim-amikai" class="headerlink" title="[Vim]You don’t need more than one cursor in vim - amikai"></a><a href="https://medium.com/@schtoeffel/you-don-t-need-more-than-one-cursor-in-vim-2c44117d51db">[Vim]You don’t need more than one cursor in vim</a> - amikai</h3><p>Multi-cursor 強大的編輯功能，讓你同時可以一次編輯文件的多個位置，而這個功能也被 vscode 和 sublime… 等編輯器所支援。但在 vim 裡真的需要這個功能嗎，本篇文章作者講述了使用 Multi-cursor 的情境？並且透過 vim builtin 的操作達到同樣的效果，並且用他的觀點為文章取了 You don’t need more than one cursor in vim。這篇文章從很常使用的編輯情境切入，不管有沒有使用過 multi-cursor 都建議一讀。</p>
<h3 id="安全背后-浏览器是如何校验证书的-–-gholk"><a href="#安全背后-浏览器是如何校验证书的-–-gholk" class="headerlink" title="安全背后: 浏览器是如何校验证书的 – gholk"></a><a href="https://cjting.me/2021/03/02/how-to-validate-tls-certificate/">安全背后: 浏览器是如何校验证书的</a> – gholk</h3><p>现如今的 Web，HTTPS 早已经成为标配，启用 HTTPS 的核心是一个叫做 <strong>证书</strong> 的东西。不知道大家之前是否有留意到，有時浏览器会提示「您的链接不是私密链接」，这其实就是因为該網站的证书有问题。如果点击「继续前往」，它会提示你下载安装它的根证书。根證書是「信任链」的根，我们的手机、电脑、电视机的操作系统中都预装了 CA 的根证书，他们是所有信任构建的基石。接下来，只要设计一个体系，能够证明 A 证书签发了 B 证书即可。这样对于收到的任何一个证书，顺藤摸瓜，只要最上面的根证书在系统中存在，即可证明该证书有效。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #23 - Hey! My Friend! 修 code 路比寫 code 還難～</title>
    <url>/week23/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="System-Analysis-amp-Design-Hands-on-Note-–-Rain"><a href="#System-Analysis-amp-Design-Hands-on-Note-–-Rain" class="headerlink" title="System Analysis &amp; Design Hands-on Note – Rain"></a><a href="https://medium.com/random-life-journal/system-analysis-design-hands-on-note-5d7a93bd106d?source=friends_link&sk=33bfd467082554d00464744ae2a98d04">System Analysis &amp; Design Hands-on Note</a> – Rain</h3><p>隨著軟體工程技術的迅速發展，各類實用的工具也應運而生，解決了一個又一個曾經讓軟體工程師們頭痛不已的問題。但反觀而言，這也導致越來越多的人直接把「工具」作為「方案」使用，當情境相似時就直接套上使用，反而忽略對於系統問題及需求本質上的分析。我將在本篇文章中將會講述在我們面臨一個軟體系統分析與設計的議題時，可以嘗試從哪些角度切入思考、這些觀點分別象徵著什麼樣的價值觀、以及一些我個人會特別留意的潛在問題。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="成為-Git-獨行玩家的第一步-–-自架-cgit-網頁程式碼瀏覽服務-–-r2"><a href="#成為-Git-獨行玩家的第一步-–-自架-cgit-網頁程式碼瀏覽服務-–-r2" class="headerlink" title="成為 Git 獨行玩家的第一步 – 自架 cgit 網頁程式碼瀏覽服務 – r2"></a><a href="https://sean0921.github.io/2021/03/27/be-a-git-single-player-cgit-tutorial">成為 Git 獨行玩家的第一步 – 自架 cgit 網頁程式碼瀏覽服務</a> – r2</h3><p>不想被單一特定程式碼平臺綁住你個人開發的程式碼，又想將你的心血整合起來供其他人參考嗎? 又或是擔心在 GitHub 上一堆「為了學術研究用途」的專案哪一天被和諧掉嗎? 如果沒有多人合作、CI/CD 需求、直接從網頁登入存取的需求，<code>cgit</code> 這個由 C 語言開發的網頁 cgi 服務，簡潔又快速的特性或許可以輕易滿足你的需求喔！以下是筆者自架的範例: <a href="https://cgit.clam.ml/?p=about">https://cgit.clam.ml</a></p>
<h3 id="讓-emacs-evil-超越-vi-–-gholk"><a href="#讓-emacs-evil-超越-vi-–-gholk" class="headerlink" title="讓 emacs evil 超越 vi – gholk"></a><a href="http://gholk.github.io/emacs-evil-over-vi.html">讓 emacs evil 超越 vi</a> – gholk</h3><p>以前是從 vi 開始學起，但因為喜歡 lisp， 又看到有人說 emacs 裝 evil 就有類似 vi 的操作， 而且還能用 elisp 擴展 vi 原有的 text-object 概念，更上一層樓， 所以我就跳槽到 emacs 了。 這篇介紹最近對 evil 大刀闊斧進行的擴充。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="Using-pipelining-to-speedup-Redis-queries-–-Rain"><a href="#Using-pipelining-to-speedup-Redis-queries-–-Rain" class="headerlink" title="Using pipelining to speedup Redis queries – Rain"></a><a href="https://redis.io/topics/pipelining">Using pipelining to speedup Redis queries</a> – Rain</h3><p>若各位讀者曾經經手過頗具規模的軟體服務的話，相信多半都有應對過流量增大的壓力，使用 Redis 對常用的資料進行短時間內的緩存，以此提供快速資料讀取舒緩資料庫的壓力便是路人皆知的方法。而在操作 Redis 時也有許多細微技巧值得我們學習，本文中提到的 Pipelining 就是其中一項。由於 Redis 在使用上採行了 client-server 的 model，這使得每次和 server 讀取或寫入資料時，都必須等待封包來回傳遞的時間，也就是大家熟知的 Round Trip Time (RTT)，這無謂的時間損耗在高頻率的操作下便顯得更加礙事。Pipelining 其實不是什麼嶄新的技術，在許多領域比如 CPU 執行指令集都早已行之有年，Redis 也在很早期的版本就有時做了這個 feature。本文作者將透過解釋 pipelining 的原理，以及 benchmark 成效與幾段實際的 Ruby code 來介紹這個簡潔又實用的技巧</p>
<h3 id="要求革除-Richard-M-Stallman-所有領導職務的公開信-r2"><a href="#要求革除-Richard-M-Stallman-所有領導職務的公開信-r2" class="headerlink" title="要求革除 Richard M. Stallman 所有領導職務的公開信 - r2"></a><a href="https://rms-open-letter.github.io/">要求革除 Richard M. Stallman 所有領導職務的公開信</a> - r2</h3><p>講到 Richard Stallman, 通常對自由軟體歷史有初步瞭解的人可以馬上聯想到他發起 GNU 專案，創立自由軟體基金會(FSF)等許多對開源生態的重大貢獻。然而在 2021/3/23 開源社群卻發起了聯署要求 Stallman 革除所有開源社群相關領導職務並不得回任。</p>
<p>公開信及其附件中提到他的性別歧視行為，以及對於成年與未成年性行為的發言、懷有唐氏症的嬰兒是否該被生下來、跨性別指稱方式等議題，發言皆不甚恰當。截至 UTC 時間 2021/3/28 4pm，聯署人數已經來到 2784 人。紅帽公司也宣佈<a href="https://www.redhat.com/en/blog/red-hat-statement-about-richard-stallmans-return-free-software-foundation-board">停止對自由軟體基金會的捐款與貢獻參與</a>。後續造成 <a href="https://www.fsf.org/news/richard-m-stallman-resigns">Stallman 於 2019 年一度請辭 FSF 與 MIT</a> 職位後再度請辭。即使後來有相關支持者以同樣做法發公開信後，Stallman 隨即再度回到崗位，但此事件在開源社群造成的後續爭論，以及對於性別議題價值觀的分歧，恐怕短時間內難以平復。</p>
<h3 id="究竟是什么让-Go-语言成为恶意软件作者的最爱-–-gholk"><a href="#究竟是什么让-Go-语言成为恶意软件作者的最爱-–-gholk" class="headerlink" title="究竟是什么让 Go 语言成为恶意软件作者的最爱 – gholk"></a><a href="https://tonybai.com/2021/03/07/go-malware-round-up-2020/">究竟是什么让 Go 语言成为恶意软件作者的最爱</a> – gholk</h3><p>近期安全技术公司 Intezer 发布了一份名为《Year of the Gopher, A 2020 Go Malware Round-Up》的报告，该报告称在过去几年中，安全人员发现的用 Go 编写的新恶意软件几乎增加了 2000%，这一标题迅速引爆程序员社区，有人唾弃 Go 踏入“歧途”，也有人膜拜 Go 的 niubility：能被黑客看中和使用的都是精华！</p>
<blockquote>
<p>Rob：最大的惊喜是当我们得知 Go 被用于编写恶意软件时。您无法控制谁将使用您的作品或他们将如何使用它。</p>
</blockquote>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #24 - 慟！CCNS 雙周刊面臨斷更危機，內部辛酸文件流出</title>
    <url>/week24/</url>
    <content><![CDATA[<p>本期周刊因為稿件不足，因此原創文章只選了二篇，故再多選一篇分享湊足六篇。</p>
<p>另外本期開始，我們在周刊網站增加了搜尋功能，搜尋功能位在導欄列的右側，可進行歷期周刊內文的全文搜尋；搜尋前會下載 100K 左右的全文內容，有流量限制的讀者可能要注意。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="用-steam-的-proton-執行-windows-exe-–-gholk"><a href="#用-steam-的-proton-執行-windows-exe-–-gholk" class="headerlink" title="用 steam 的 proton 執行 windows exe – gholk"></a><a href="http://gholk.github.io/linux-proton-wine-outside-steam.html">用 steam 的 proton 執行 windows exe</a> – gholk</h3><p>偶爾會用 wine 在 linux 下跑 exe 玩遊戲，但相容性還是有些問題。steam 之前為了推 steam linux， 在 wine 之上改良了一個 proton，相容性好很多，適合拿來玩遊戲。 我是裝 steam for linux 後，再用 steam 裝了 proton。 如果想不透過 steam 用 proton 跑 exe 檔案， 可以直接執行 proton 執行檔： <code>&quot;~/.steam/steam/steamapps/common/Proton 5.13/proton&quot; run game.exe</code> ， 另外要再設一個環境變數 <code>STEAM_COMPAT_DATA_PATH</code> 指定 proton 存資料的資料夾。</p>
<h3 id="CCNS-鏡像站使用說明-r2"><a href="#CCNS-鏡像站使用說明-r2" class="headerlink" title="CCNS 鏡像站使用說明 - r2"></a><a href="https://mirror.ccns.ncku.edu.tw/">CCNS 鏡像站使用說明</a> - r2</h3><p>CCNS 鏡像站成立已經有好一陣子，也陸續回報至各開源社群分享給有需要的人。有鑑於週遭的人仍然還是不太清楚如何善用此服務，目前初步使用 mkdocs 文件生成器搭配 readthedocs 主題建立了一個基本的使用說明頁面，有待有興趣利用此服務的成大學生或各界人士有一個可以摸索的依據。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="不要大喊大叫-–-gholk"><a href="#不要大喊大叫-–-gholk" class="headerlink" title="不要大喊大叫 – gholk"></a><a href="https://type.cyhsu.xyz/2021/03/do-not-shout/">不要大喊大叫</a> – gholk</h3><p>目前中文网络上一种流行的做法——用方头括号、书名号、直角引号等符号标点标示关键字词，生怕你不知道【这段话】【真的】【很重要】。这种现象的背后是信息之间竞争越发激烈的社交媒体环境，有如一群人互相「大喊大叫」。在音乐行业发生的响度战争（loudness war）就是一例：唱片公司、作曲者在争夺听众耳朵的竞争压力下，依靠粗暴放大声波振幅达到提高音量感知的效果，但代价则是损害听众的听力健康，音乐作品也日渐动态范围收窄、细节损失。</p>
<p>此外，一些平台上也開始出現使用不符合語意的 html 標記，只求誇張渲染效果的用法。例如將預強調的文字放在 code block 語法內，以期將文字以 code block 的醒目樣式渲染，而無顧文字本身並非程式碼，根本不符合 code block 的使用場景。</p>
<h3 id="Rocky-Linux-8-3-RC1-Available-Now-r2"><a href="#Rocky-Linux-8-3-RC1-Available-Now-r2" class="headerlink" title="Rocky Linux 8.3 RC1 Available Now - r2"></a><a href="https://rockylinux.org/news/rocky-linux-8-3-rc1-release/">Rocky Linux 8.3 RC1 Available Now</a> - r2</h3><p>由當初的 CentOS Project 創立者再次發起，以取代 CentOS 地位目的，繼承傳統 CentOS 精神的 RockyLinux，終於釋出 8.3-RC1 測試版本了！ 需要注意的是目前仍處於測試階段，套件發布的部分目前仍以 Rocky Linux 自己的 CDN 為散佈的管道(官方表示歡迎申請 mirror)。 之後於何時發行正式版本，以及相關容器、雲端映像檔，仍待後續官方發布！有興趣的 Linux 使用者歡迎協助測試以及參與社群回饋！</p>
<h3 id="Serverless-Architecture-Patterns-in-AWS-–-Rain"><a href="#Serverless-Architecture-Patterns-in-AWS-–-Rain" class="headerlink" title="Serverless Architecture Patterns in AWS – Rain"></a><a href="https://waswani.medium.com/serverless-architecture-patterns-in-aws-edeab0e46a32">Serverless Architecture Patterns in AWS</a> – Rain</h3><p>具有高擴展彈性與低維護成本的 Serverless 技術在這個需要持續緊跟市場腳步的時代越來越吸引軟體工程界的關注，作者在本篇文章中會簡單列出七個常見的 Serverless 架構並簡述其適合情境。</p>
<h3 id="WhatsApp-and-most-alternatives-share-the-same-problem-–-gholk"><a href="#WhatsApp-and-most-alternatives-share-the-same-problem-–-gholk" class="headerlink" title="WhatsApp and most alternatives share the same problem – gholk"></a><a href="https://stuker.com/2021/whatsapp-and-most-alternatives-share-the-same-problem/">WhatsApp and most alternatives share the same problem</a> – gholk</h3><p>手機上各類即時通訊軟體的共同問題，就是都只支援在同一個軟體中的使用者互相溝通；對照下，不管你是用 yahoo 或 google 的 email，都可以互相寄信；或者是無論用中華電信或台灣大哥大，都可以互相撥打電話與傳送簡訊。文中提到了 matrix 這個聯邦式的開放協議，理論上只要同樣使用 matrix，不同的 app 與 server 間仍可以互通。法國與德國政府均有計劃開發基於 matrix 的 app。類似的協議還有 xmpp。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #25 - 現在不渴未來也是會渴，所以我現在喝是為了預防未來</title>
    <url>/week25/</url>
    <content><![CDATA[<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="夢之大地-Maple3-的-BRH-看板閱讀紀錄系統-–-IID-Iweidieng-Iep"><a href="#夢之大地-Maple3-的-BRH-看板閱讀紀錄系統-–-IID-Iweidieng-Iep" class="headerlink" title="夢之大地(Maple3) 的 BRH 看板閱讀紀錄系統 – IID (Iweidieng Iep)"></a><a href="https://github.com/ccns/dreambbs/wiki/BoardReadingHistory-zh_tw">夢之大地(Maple3) 的 BRH 看板閱讀紀錄系統</a> – IID (Iweidieng Iep)</h3><p>BRH 看板閱讀紀錄系統是 MapleBBS 3 所使用的看板閱讀紀錄系統，而 BRH 是此系統所使用的資料結構。在 BBS 使用者目錄下的 .BRH 檔是匯集了此使用者閱讀的所有看板的 BRH 的輸出。MapleBBS 3.00a 時，開發者在 BRH 相關函式誤用了 <code>memcpy</code> 來移動記憶體範圍可能重疊的 BRH 資料，產生 undefined behavior 而未加以修正。使得在較新的作業系統上運作時，會因為 memcpy 最佳化的 undefined behavior 而出現 BRHs 損壞的現象。本篇文章作者已經將相關細節記錄在文章中並實作在現行的夢之大地 BBS 上，希望對其他嘗試移植系統到較新平臺的 Maple3 BBS 站臺開發人員有所幫助，進而增加類似系統至今能夠持續被維護的可能。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="對下一代即時通訊系統的想像-–-gholk"><a href="#對下一代即時通訊系統的想像-–-gholk" class="headerlink" title="對下一代即時通訊系統的想像 – gholk"></a><a href="http://gholk.github.io/instant-message-app-future-work.html">對下一代即時通訊系統的想像</a> – gholk</h3><p>現代智慧型手機上的即時通訊軟體都有許多體制上的缺陷， 包含不自由、不安全、侵犯隱私、依賴中心伺服器等。 自由軟體界蠻重視這些議題，也都有提出對應的解決方法， 本文介紹我自己的理解與對應的軟體。</p>
<h3 id="筆記-API-設計概念-下篇-LanKuDot"><a href="#筆記-API-設計概念-下篇-LanKuDot" class="headerlink" title="[筆記] API 設計概念 - 下篇 - LanKuDot"></a><a href="https://airfishqi.blogspot.com/2020/07/api_12.html">[筆記] API 設計概念 - 下篇</a> - LanKuDot</h3><p>之前為了 python 專案要提供 module API 給使用者使用，而去搜尋相關資料，找到這場 Google 的演講 - 「How To Design A Good API and Why it Matters」。當中提到平常寫程式就是一種 API 設計，因而覺得演講中的概念對於寫程式的觀念相當有幫助，所以將其整理成兩篇筆記。延續<a href="https://weekly.ccns.io/week9/">上篇</a>，本篇為下篇，記錄演講下半場的內容，主要為類別設計與函式設計的概念。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="翻譯-即時通大戰-Chat-Wars-上篇-–-gholk"><a href="#翻譯-即時通大戰-Chat-Wars-上篇-–-gholk" class="headerlink" title="[翻譯] 即時通大戰 Chat Wars(上篇) – gholk"></a><a href="https://www.ptt.cc/bbs/Translate-CS/M.1398461158.A.34D.html">[翻譯] 即時通大戰 Chat Wars(上篇)</a> – gholk</h3><blockquote>
<p>這篇文章主要是在談早期 MSN vs AOL 的大戰。這場大戰其實結果還滿清楚的，MSN 打倒了 AOL Instant Messenger(AIM)，成為未來十年內最成功的 IM(Instant Messenger)。這篇文章提到的不止是商場策略，而且還提到了許多技術方面的東西，尤其是 Microsoft 怎麼「破解」AOL Service Server。</p>
</blockquote>
<p>這不是我翻的，只是分享。也不要問我下篇在哪，太監了（下面沒有了），自己去看原文。</p>
<h3 id="System-Design-—-AWS-SNS-–-Rain"><a href="#System-Design-—-AWS-SNS-–-Rain" class="headerlink" title="System Design — AWS SNS – Rain"></a><a href="https://medium.com/swlh/system-design-creating-aws-sns-2aa1b2393577">System Design — AWS SNS</a> – Rain</h3><p>Message broker 作為一個應對無法及時消化工作量的解決方案，在流量難以預測的情境中給了我們不少幫助，但我們往往很少去深究其內部究竟是如何實現的。本篇文章中作者將會以 AWS SNS 作為示範，從比較口語上的可靠性與可用性，到細節上儲存空間與網路帶寬需求來一一討論各種考量要點。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #26 - 我們都知道區塊鏈是問題的答案，但還不知道問題是什麼</title>
    <url>/week26/</url>
    <content><![CDATA[<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="夢之大地新式密碼加密原理分享-–-IID"><a href="#夢之大地新式密碼加密原理分享-–-IID" class="headerlink" title="夢之大地新式密碼加密原理分享 – IID"></a><a href="https://github.com/ccns/dreambbs/wiki/new_encrypt_way">夢之大地新式密碼加密原理分享</a> – IID</h3><p>夢之大地在 v1.x 之前與其他多數 BBS 系統一樣，使用的密碼加密方式都是 DES，而在現代有了加密強度不夠的問題。從夢大 v2.0 開始，已啟用新的密碼加密系統，使用了 SHA-256。注意本文稱呼的「密碼加密」，是利用密碼 hash 函數來儲存與驗證密碼的方法。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="The-concepts-behind-the-built-in-indexes-of-PostgreSQL-–-Rain"><a href="#The-concepts-behind-the-built-in-indexes-of-PostgreSQL-–-Rain" class="headerlink" title="The concepts behind the built-in indexes of PostgreSQL – Rain"></a><a href="https://medium.com/random-life-journal/the-concepts-behind-the-built-in-indexes-of-postgresql-e5a35c63098b?source=friends_link&sk=b3fe287920e06a7f961122e58b38a0cc">The concepts behind the built-in indexes of PostgreSQL</a> – Rain</h3><p>記得兩三年前第一次接觸 database 時，面對 query 速度過慢的問題總是會反射性回應「建立 index」。當時一直以為 index 就只有 binary search tree 一種實作方式而已。後來看過越來越多不同的產品及案例，各自的資料庫內所儲存的資料都有所不同，因此意識到 binary search tree 並不是萬用解法，並開始研究各種不同 index 背後的設計思維。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="在-Debian-Ubuntu-等-Linux-發行版下簡易打包軟體-–-以-SAC-為例-–-r2"><a href="#在-Debian-Ubuntu-等-Linux-發行版下簡易打包軟體-–-以-SAC-為例-–-r2" class="headerlink" title="在 Debian/Ubuntu 等 Linux 發行版下簡易打包軟體 – 以 SAC 為例 – r2"></a><a href="https://sean0921.github.io/2021/06/06/sac-debian-packaging/">在 Debian/Ubuntu 等 Linux 發行版下簡易打包軟體 – 以 SAC 為例</a> – r2</h3><p>Linux 發行版基本上就是一個「拼裝車」，將各個不同來源的專案原始碼組合成一個多用途的「通用作業系統」。我們將以地震學軟體 SAC 為例，說明如何簡單利用「套件打包」的機制，藉由既有的軟體打包管理工具，來更有秩序地管理發行版內的軟體。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="Lessons-from-Building-Observability-Tools-at-Netflix-–-Rain"><a href="#Lessons-from-Building-Observability-Tools-at-Netflix-–-Rain" class="headerlink" title="Lessons from Building Observability Tools at Netflix – Rain"></a><a href="https://netflixtechblog.com/lessons-from-building-observability-tools-at-netflix-7cfafed6ab17">Lessons from Building Observability Tools at Netflix</a> – Rain</h3><p>越是複雜的系統，行為追蹤上就越有挑戰，尤其是版圖橫跨世界的 Big Tech companies 所建構的系統，連企業內部的資深員工在演講時也多次坦言沒有任何一位工程師能理解整個系統架構。在面對這樣的一個近似於黑箱的龐大服務時，該如何準確擷取關鍵資訊，並將其轉換成有助於判斷當下情況的資訊，是個非常值得研究的課題。本文作者將針對 log ingestion, request tracing, metrics analysis 等等方面來分享在打造工具時所遭遇的難點與對應的解決方案。</p>
<h3 id="從-Freenode-脫離以及-IRC-新秀-Libera-Chat-–-gholk"><a href="#從-Freenode-脫離以及-IRC-新秀-Libera-Chat-–-gholk" class="headerlink" title="從 Freenode 脫離以及 IRC 新秀 Libera.Chat – gholk"></a><a href="https://gugod.org/2021/05/freenode-exodus-and-libera-chat/">從 Freenode 脫離以及 IRC 新秀 Libera.Chat</a> – gholk</h3><p>freenode 是長年以來被多數開源與自由軟體社群所用的 IRC 網，也是 g0v 當初起創之時的所在地。不過最近顯然經歷了不少風雨。在 5/19 時天地變色。</p>
<p>12 位工作人員在當天發表辭職聲明。主要大意都是對於 freenode ltd 被全數賣給 Andrew Lee 這位人物。買賣成立之後這位 Andrew Lee 似乎決定要對他新買來的公司的商轉方式伸手伸腳，而這一點與他所給的承諾前後不一。多數工作人員似乎覺得這為新來的作風很有問題，與 freenode 創辦初衷方向偏離，所以離職。 </p>
<p>而在 5/19 同一天，這些工作人員所設立的新網絡 Libera.chat 出現。這整件事也公表於世。一群共事十幾年的人脫離舊公司後跳出來再開設一間業務一模一樣的新公司，他們顯然十分喜歡做這件事。也是還真是謝謝他們在這近二十年間提供服務，讓 freenode 長年能為免費且與監視資本主義沾不上邊。之後會演變成怎麼樣呢。</p>
<h3 id="英文-研究宣稱比特幣消耗的能源小於傳統金融業-–-gholk"><a href="#英文-研究宣稱比特幣消耗的能源小於傳統金融業-–-gholk" class="headerlink" title="[英文] 研究宣稱比特幣消耗的能源小於傳統金融業 – gholk"></a><a href="https://www.independent.co.uk/life-style/gadgets-and-tech/bitcoin-mining-environment-climate-crypto-b1849211.html">[英文] 研究宣稱比特幣消耗的能源小於傳統金融業</a> – gholk</h3><p>加密貨幣使用電腦進行大量計算以 <strong>開採</strong> 與 <strong>記錄</strong> 交易過程，因此常被批評消耗過多能源在沒有意義的事上，特斯拉執行長馬斯克即因此決定取消特斯拉透過比特幣支付的銷售管道。但一項新研究估計了全世界在比特幣上所消耗的能源，為 113.89 tera watts，尚少於全世界傳統銀行業的耗能 263.73 tera watts，與金礦開採的耗能 240.61 tera watts。</p>
<p>但考量目前比特幣仍屬於發展期，耗能也許還沒到達頂峰，而目前銀行業的耗能，已經是實際支撐全球使用規模的結果；要以此斷言比特幣較傳統金融業節約能源並不合理。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #27 - 人工數據大智慧田字薯餅佐鳳梨鮭魚沙拉</title>
    <url>/week27/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="The-Advanced-Challenge-of-Load-Balancing-–-Rain"><a href="#The-Advanced-Challenge-of-Load-Balancing-–-Rain" class="headerlink" title="The Advanced Challenge of Load Balancing – Rain"></a><a href="https://medium.com/geekculture/the-advanced-challenge-of-load-balancing-6f6ef5f36ec4?source=friends_link&sk=c4fda7731a4d115c07b0693f43492101">The Advanced Challenge of Load Balancing</a> – Rain</h3><p>這幾年處理 Load Balancing 相關問題的一些心得，若要能實現任意的分配流量的話必須滿足一些前提，其中一個就是所有 server 都必須是 stateless，如此一來一個 request 在每一台 server 的處理邏輯才會相同。然而很多用於提昇效能的技術如 Session 和 WebSocket 都會增加一些變數，直接套用市面上常見的 Load Balancer 而沒有進一步去研讀文件的話，很可能會忽略一些關鍵問題，進而導致服務運作異常的潛在風險。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="matrix-菜鳥使用心得-–-gholk"><a href="#matrix-菜鳥使用心得-–-gholk" class="headerlink" title="matrix 菜鳥使用心得 – gholk"></a><a href="http://gholk.github.io/ccns-matrix-luser-review.html">matrix 菜鳥使用心得</a> – gholk</h3><p>一直想架一個自由的即時通訊軟體， 之前 <a href="http://gholk.github.io/instant-message-app-future-work.html">大概研究了幾個自由的 im</a> ， 最後因為有社團的資源可以蹭，所以架了聯邦制的 im matrix。matrix 在架構上介於 discord（或 slack）與 irc 的中間， 但因為聯邦制和注重隱私，又多了一些不便。 加上很多功能還在開發中，會少一些功能，需要手動操作。 目前要直接從 discord 搬過來 matrix 會不太方便。 本文介紹了 matrix 的基本概念、使用經驗、與 discord 的比較， 最後是如何以 restful api 管理伺服器。</p>
<h3 id="PyGMT-在-Python-製圖領域推廣-GMT-的利器-我-ok-你先用-–-r2"><a href="#PyGMT-在-Python-製圖領域推廣-GMT-的利器-我-ok-你先用-–-r2" class="headerlink" title="PyGMT, 在 Python 製圖領域推廣 GMT 的利器? 我 ok, 你先用? – r2"></a><a href="https://sean0921.github.io/2021/06/21/pygmt-2021-6-feedback/">PyGMT, 在 Python 製圖領域推廣 GMT 的利器? 我 ok, 你先用?</a> – r2</h3><p>Generic Mapping Tools，通用製圖工具，官方以及常見的簡稱為 GMT，是在地球科學領域廣泛使用的地理製圖工具之一。它可以在各種平臺結合 Shell Script (bash、csh)，Batch file(Windows) 的特性以及第三方工具(如: awk)，撰寫腳本以進行空間資訊的數據處理及高度客製化的地圖、圖表繪製。PyGMT 於 2020 年 5 月釋出，作為 GMT 在 Python 的 API。究竟這樣的專案對於 GMT 的使用族群而言有什麼可利用之處呢？以下分享個人的使用心得。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="英文-聯邦制的權限管理：以-gnome-社群的-matrix-為例-–-gholk"><a href="#英文-聯邦制的權限管理：以-gnome-社群的-matrix-為例-–-gholk" class="headerlink" title="[英文] 聯邦制的權限管理：以 gnome 社群的 matrix 為例 – gholk"></a><a href="https://blog.ergaster.org/post/20210610-sovereignty-federated-system-gnome/">[英文] 聯邦制的權限管理：以 gnome 社群的 matrix 為例</a> – gholk</h3><p>gnome 社群並沒有定義出正式的聊天平台。 最近他們決定架設 matrix，但在管理上碰到了一些問題。 他們的 matrix 是開放註冊的，不屬於 gnome 社群的人也可以註冊， 取得一個 <code>@xxxxx:gnome.org</code> 的帳號，帶來了身份識別問題。 他們一開始也並未限制頻道地址命名空間， 所有使用者都能建立 <code>#xxxxx:gnome.org</code> 的頻道。 他們還遭遇了某些頻道自治的問題。 最後，他們遷移到了 matrix 的託管平台 EMS 上。</p>
<p>該部落格還有一些有關 gnome matrix 的文章。</p>
<h3 id="rootfs-淺談-–-r2"><a href="#rootfs-淺談-–-r2" class="headerlink" title="rootfs 淺談 – r2"></a><a href="https://docs.google.com/presentation/d/1v7ScSVk00PVfthV8E-dEeT3o7YcV29Hm2qdDKxHlo-Y/edit#slide=id.p">rootfs 淺談</a> – r2</h3><p>本篇技術簡報分享主要介紹了 rootfs 在 Linux 組成、Linux 開機的地位，以及如何用 FHS (檔案系統階層標準) 規範 rootfs 的架構，從各個發行版的既有資源建立 rootfs，藉由 chroot 進入 rootfs 的方式。概念看似基本，但對於想要理解容器化基礎，或是建立更為客製化的 Linux 發行版，瞭解並對照其他 Unix 家族組成架構的來說，卻是不可或缺的。另外理解 chroot 的概念也能在本地 console 操作的 Linux 機器無法開機時，快速嘗試出有效的救援方案。</p>
<h3 id="Alpine-Slim-Stretch-Buster-Jessie-Bullseye-—-What-are-the-Differences-in-Docker-Images-–-Rain"><a href="#Alpine-Slim-Stretch-Buster-Jessie-Bullseye-—-What-are-the-Differences-in-Docker-Images-–-Rain" class="headerlink" title="Alpine, Slim, Stretch, Buster, Jessie, Bullseye — What are the Differences in Docker Images? – Rain"></a><a href="https://medium.com/swlh/alpine-slim-stretch-buster-jessie-bullseye-bookworm-what-are-the-differences-in-docker-62171ed4531d">Alpine, Slim, Stretch, Buster, Jessie, Bullseye — What are the Differences in Docker Images?</a> – Rain</h3><p>如果你也是一名熟悉容器化服務的開發者，那麼你肯定曾經遇過打包 image 時該如何選用 base image 的問題，有些已經幫你裝了許多好用的工具讓你打包速度提升不少，但也因此體積較為龐大，有些則是有著非常小的體積，但也因為對他的不熟悉而不確定裡面是不是缺了什麼重要的工具。以 Go 語言的 docker image 來說，official 的完整版是 800+ MB，如果你是用一些公有雲提供商的免費額度虛擬機器，那麼相當於直接把可用儲存空間佔掉一半左右，選擇另個更輕量的肯定是明智之舉。本篇作者會分享常見的 docker image tag 後綴意涵，幫助大家更好的選擇需要的 base image。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #28 - 來到 CCNS 的第 28 周，我覺得自己和社員們都很純樸</title>
    <url>/week28/</url>
    <content><![CDATA[<p>本周由於存稿不足，原創文章只選了二篇舊文。歡迎參與過 ccns 活動的舊雨新知投稿雙周刊！</p>
<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="Ptt-Ptt2-近期對於-SSH-連線實作的更動-—-r2"><a href="#Ptt-Ptt2-近期對於-SSH-連線實作的更動-—-r2" class="headerlink" title="Ptt/Ptt2 近期對於 SSH 連線實作的更動 — r2"></a><a href="https://blog.clam.ml/2021/07/04/ptt-is-testing-new-sshd/">Ptt/Ptt2 近期對於 SSH 連線實作的更動</a> — r2</h3><p>本篇文章將以使用者與 BBS 程式測試者的角度觀察，最近 PttBBS 對於 SSH 連線提供服務方式的更動，以及對於一般使用者可能造成的影響。<br>近幾年以來發生尖峰時間 Ptt 無法正常登入的負載問題頻率愈來愈高，尤其在近幾個月來更是出現一般使用者認為中規模的事件，如：小區域地震、三級警戒以來每天召開的防疫記者會，Ptt 也仍因過載而持續發生無法登入的窘況。引發各看板，包含 SYSOP 站務板大大小小的抱怨。<br>對此站方有什麼積極應對解決的方案呢？其實是有的。本篇文章根據初步觀察大概分成四個階段：觀察、分析、嘗試方案、解決(正式上線)，並一併討論 SSH 連線實作的更動會如何改善這樣的問題。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="從舊手機備份中拷貝遊戲的存檔-—-gholk"><a href="#從舊手機備份中拷貝遊戲的存檔-—-gholk" class="headerlink" title="從舊手機備份中拷貝遊戲的存檔 — gholk"></a><a href="http://gholk.github.io/android-copy-game-save-data.html">從舊手機備份中拷貝遊戲的存檔</a> — gholk</h3><p>最近比較閒，把一些以前玩過的 android 遊戲裝回來玩。很多遊戲都沒有內建存檔轉移機制，所以以前玩的進度沒了。只好自立自強從以前手機的備份映象檔中，找回以前遊戲的存檔，放到現在手機的資料目錄中。<br>Android 手機的備份檔案，常見的有 tar，也有整個檔案系統的映像檔，而後者的格式可能是古老的 yaffs 或是近年的 ext4。至於直接把存檔從手機裡拉出來及送進去，用 root 可以簡單做到，而用 adb backup 搭配 adb backup extractor 也可以。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="2020-21-趨勢：中國遊戲正在跳過臺灣？-—-gholk"><a href="#2020-21-趨勢：中國遊戲正在跳過臺灣？-—-gholk" class="headerlink" title="2020-21 趨勢：中國遊戲正在跳過臺灣？ — gholk"></a><a href="http://www.u-acg.com/archives/25160">2020-21 趨勢：中國遊戲正在跳過臺灣？</a> — gholk</h3><blockquote>
<p>今天下午舉行六月分享會，邀請了熊大總經理來聊聊他作為玩家，也作為營運廠商對於台灣產業遊戲的心得。<br>[…]<br>在整場討論中，有一個關鍵點是我們提到了<strong>「中國遊戲正在退出（精確地說，是跳過）台灣市場」</strong>，這一話題讓許多朋友私訊來問我，甚至還有媒體記者來詢問，所以我就簡單寫了這篇來說明。更詳細的討論，請參考八月 RainReader 在《數位時代》或其他地方的專欄。</p>
</blockquote>
<blockquote>
<p>[…] 2020 年大量的中國遊戲跳過臺灣，直接進入韓國和日本，乃至於全球市場。這些中國遊戲在韓、日或全球市場上取得非常亮眼成績在幾年前幾乎是不可想像的事。這些中國遊戲直接省略在台灣市場測試的時間，自然就讓許多靠代理中國遊戲為生的中小型營運廠商面對很大的挑戰。</p>
</blockquote>
<blockquote>
<p>上述的情況之所以會在這幾年內產生，其中一個關鍵的原因是乃至政治上的對立氛圍。本文並不打算討論政治，但兩岸政治的緊張已經深刻影響到所有領域，幾個有名的事件可以作為例證：</p>
</blockquote>
<ul>
<li>2020 年 4 月 4 日 的網銀與西山居事件</li>
<li>Hololive 與華碩 ROG 小編在脖子架著刀事件</li>
<li>赤燭的《還願》</li>
</ul>
<h3 id="Debian-套件打包教學指南-—-r2"><a href="#Debian-套件打包教學指南-—-r2" class="headerlink" title="Debian 套件打包教學指南 — r2"></a><a href="https://www.debian.org/doc/manuals/packaging-tutorial/packaging-tutorial.zh_TW.pdf">Debian 套件打包教學指南</a> — r2</h3><p>繼 <a href="/week26">week26</a> 介紹如何用簡易方式快速打包 Debian package 後，這邊再分享一個如何「正確」打包 Debian 套件的官方指南。該指引也理應適用於所有 Debian 衍生發行版，例如 Ubuntu、MX Linux 等。這本官方手冊的優點有：1. 為正體中文版；2. 有持續被維護；3. 翻譯者為臺灣的 Debian developer — <a href="https://www.linkedin.com/in/szlin">SZ Lin</a>，在臺灣其他開源社群也十分活躍。有了這樣的資源，相信要瞭解正確的套件打包知識，並且將其觀念與其他發行版對照而理解活用，將會容易許多。</p>
<h3 id="Bedtime-Stories-For-Children-Storage-Engines-pub-ver-—-Rain"><a href="#Bedtime-Stories-For-Children-Storage-Engines-pub-ver-—-Rain" class="headerlink" title="Bedtime Stories For Children: Storage Engines (pub-ver) — Rain"></a><a href="https://docs.google.com/presentation/d/14KkpQamsTSxhvliYUUXOGAQ_C61v0BHsefZ344HUGB8/edit?fbclid=IwAR2neFF1P8kcdk_afCYRGljXuqLIOnI_cAEANwGoVHx7X-RtJ0LxWcwU0E0#slide=id.p">Bedtime Stories For Children: Storage Engines (pub-ver)</a> — Rain</h3><p>還在把 database 當作儲藏室在用嗎？其底層儲存資料的原理其實大有學問。本篇作者將以幼稚園小孩床邊故事的風格來深入淺出地介紹 storage engine 的發展以及在各個情境下的取捨。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #3 - 期末將近，社團呼籲大家出去逛街挺商家，不要去期末考</title>
    <url>/week3/</url>
    <content><![CDATA[<p>期末將近，大家都準備好了嗎?</p>
<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="簡報-在風塵中找回楓葉與沙灘-追尋-MapleBBS-歷史與未來-–-r2"><a href="#簡報-在風塵中找回楓葉與沙灘-追尋-MapleBBS-歷史與未來-–-r2" class="headerlink" title="[簡報] 在風塵中找回楓葉與沙灘-追尋 MapleBBS 歷史與未來 – r2"></a><a href="https://docs.google.com/presentation/d/1sVv0dKb1180uFA4Dwk7xgY_KkHUtpgMm8Awx4nPF57A">[簡報] 在風塵中找回楓葉與沙灘-追尋 MapleBBS 歷史與未來</a> – r2</h3><p>BBS，電子布告欄系統，是六、七年級生的網路共同回憶，其中 <a href="https://term.ptt.cc/">批踢踢實業坊</a> 到現在仍因討論話題五花八門，而引起大家注意。事實上 Ptt 及 21 世紀台灣的 BBS 站幾乎都由清大資工發行的 MapleBBS 2 或 3 修改編譯而成的，並藉由轉信機制讓不同站台相互交流。這樣的特性為近代網路史掀起怎樣的風波呢? 讓我們藉由殘存的腳步一同追尋吧!</p>
<h2 id="專欄-Robotic-Operating-System"><a href="#專欄-Robotic-Operating-System" class="headerlink" title="[專欄] Robotic Operating System"></a>[專欄] Robotic Operating System</h2><h3 id="English-ROS-melodic-on-Raspbian-Buster-–-DC"><a href="#English-ROS-melodic-on-Raspbian-Buster-–-DC" class="headerlink" title="[English] ROS melodic on Raspbian Buster – DC"></a><a href="https://blog.danielchen.cc/2020/01/14/ROS-melodic-on-Raspbian-Buster/">[English] ROS melodic on Raspbian Buster</a> – DC</h3><p>ROS 全名是 Robotic Operatin System，是一套用於機器人研究和相關應用開發的訊息傳遞框架，研究者可以透過 ROS 輕鬆建立起多節點的通訊網路，讓機器人系統裡的不同元件可以互相溝通並完成相關任務，且其強大的開源函式庫提供了許多基本及進階的演算法、模擬環境等，供研究人員使用。本次的文章介紹如何將 ROS 安裝在相當常見的單板電腦－Raspberry Pi 上，並解釋 ROS 在樹梅派上如何新增並管理 ROS 套件。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="English-Mutable-amp-Immutable-Object-in-Python-–-Rain"><a href="#English-Mutable-amp-Immutable-Object-in-Python-–-Rain" class="headerlink" title="[English] Mutable &amp; Immutable Object in Python – Rain"></a><a href="https://medium.com/random-technical-note/mutable-immutable-object-in-python-40505af0d94d?source=friends_link&sk=f7da1c798b6d620287527ee525ad4e1d">[English] Mutable &amp; Immutable Object in Python</a> – Rain</h3><p>In python, a language with strong OOP feature, everything is an object. One of the classification methods to divided the objects into two groups is “mutable or immutable”, which represents whether an object can be modified after it was created.</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="英文-加州大學柏克萊分校在麥塊上舉行虛擬畢業典禮-–-DC"><a href="#英文-加州大學柏克萊分校在麥塊上舉行虛擬畢業典禮-–-DC" class="headerlink" title="[英文] 加州大學柏克萊分校在麥塊上舉行虛擬畢業典禮 – DC"></a><a href="https://news.ycombinator.com/item?id=23209225">[英文] 加州大學柏克萊分校在麥塊上舉行虛擬畢業典禮</a> – DC</h3><p>近期因全球武漢肺炎疫情影響，許多學校停課或改成線上教學，畢業典禮因此也無法如期舉辦，美國有部分學校將畢業典禮移至 Zoom 等視訊軟體上舉行，而位於灣區的美國超級名校加州大學柏克萊分校則是將畢典場地移到膾炙人口的沙盒型遊戲 Minecraft 中舉行他們的虛擬畢業典禮，他們為此還將主校區的建築、道路在麥塊中重現，並於體育場舉辦這場虛擬畢業典禮，目前此柏克萊的麥塊世界有對外開放並持續擴建中，大家用麥塊可以連上 <code>mc.blockeley.com</code> 參觀他們所製作的精美麥塊地圖！</p>
<h3 id="Websocket-可以拿來掃本地連接埠，順便抱怨-Web-垃圾-–-gholk"><a href="#Websocket-可以拿來掃本地連接埠，順便抱怨-Web-垃圾-–-gholk" class="headerlink" title="Websocket 可以拿來掃本地連接埠，順便抱怨 Web{*} 垃圾 – gholk"></a><a href="https://nyllep.wordpress.com/2020/05/21/webtrash-complain/">Websocket 可以拿來掃本地連接埠，順便抱怨 Web{*} 垃圾</a> – gholk</h3><p>eBay 日前被發現會以網頁中的 javascript 對本機的多個連結埠嘗試發起連線，藉由錯誤訊息與返回時間即可替猜測出使用者的電腦開放了哪些埠甚至服務。雖然這些資訊本來就是半公開的，但掃描的行為還是讓人感到不舒服。瀏覽器的功能越來越多，各種通過瀏覽器存取裝置的 api 不斷出爐，但我們真的需要這些功能嗎？雖然使得使用上更加方便，卻同時也讓網站有更多方式追縱使用者。 </p>
<h3 id="蘋果產品發表節奏怎麼抓？該選「大更新」還是「小改款」？-–-Rain"><a href="#蘋果產品發表節奏怎麼抓？該選「大更新」還是「小改款」？-–-Rain" class="headerlink" title="蘋果產品發表節奏怎麼抓？該選「大更新」還是「小改款」？ – Rain"></a><a href="https://www.bnext.com.tw/article/57794/apple-iphone?fbclid=IwAR1ZUlO12VqaesuVE-_M7L_JZtaXq38hoZCD1_8FYRlAfLcSuKZsqXad4yQ">蘋果產品發表節奏怎麼抓？該選「大更新」還是「小改款」？</a> – Rain</h3><p>產品版本迭代更新的策略該如何規劃，市場、消費者、分析師們會如何看待這次更新，把蘋果多個產品的版本時間線和上下游供應鏈攤開來看，便會發覺其中有不少有趣之處。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #4 - 一種名為變數名稱選擇困難的病</title>
    <url>/week4/</url>
    <content><![CDATA[<h2 id="專欄-電子布告欄系統與近代網路次文化發展史"><a href="#專欄-電子布告欄系統與近代網路次文化發展史" class="headerlink" title="[專欄] 電子布告欄系統與近代網路次文化發展史"></a>[專欄] 電子布告欄系統與近代網路次文化發展史</h2><h3 id="從文章網址格式揪出假冒-ptt-網站的業配文-–-r2"><a href="#從文章網址格式揪出假冒-ptt-網站的業配文-–-r2" class="headerlink" title="從文章網址格式揪出假冒 ptt 網站的業配文 – r2"></a><a href="https://www.ptt.cc/bbs/PttNewhand/M.1587818778.A.1E7.html">從文章網址格式揪出假冒 ptt 網站的業配文</a> – r2</h3><p>看似隨機的文章編碼網址，竟然是追查 ptt 文章來源的重要線索? 讓我們抽絲剝繭裡面的規則，並用來判斷我們在網路上看到的「鄉民分享文章」是真是假吧！</p>
<h3 id="以-js-實作-ptt-文章-id-到網址的解碼器-–-gholk"><a href="#以-js-實作-ptt-文章-id-到網址的解碼器-–-gholk" class="headerlink" title="以 js 實作 ptt 文章 id 到網址的解碼器 – gholk"></a><a href="http://gholk.github.io/ptt-article-id-decoder.html">以 js 實作 ptt 文章 id 到網址的解碼器</a> – gholk</h3><p>文章 id 是 ptt 官方用來唯一索引單一一篇文章的方式。在 ptt 介面中可以簡單用 <code>#</code> 字號由文章 id 找出文章，但現今日常使用中也常使用 ptt 網頁版的網址來唯一索引文章。本文簡單介紹 ptt 文章 id 的編碼原理，並以 js 實作出將文章 id 解碼為 ptt 網頁版網址的功能。能夠在瀏覽器中將文章 id 附加在在網址後，以類似短網址自動跳轉的方式使用。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="從今天開始自幹金手指-–-HexRabbit"><a href="#從今天開始自幹金手指-–-HexRabbit" class="headerlink" title="從今天開始自幹金手指 – HexRabbit"></a><a href="https://blog.hexrabbit.io/2020/06/14/gotta-CHEAT-em-all">從今天開始自幹金手指</a> – HexRabbit</h3><p>GBA/NDS 是我們這代人的快樂童年回憶，不過破不了關的時候可就不太愉快了。這次就讓我們帶著懷舊的心情與感動，翻出早已棄置房間一角的掌上遊戲機來重溫這個破關利器的原理吧！</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="苹果往事：乔布斯和-iPod-的诞生-–-gholk"><a href="#苹果往事：乔布斯和-iPod-的诞生-–-gholk" class="headerlink" title="苹果往事：乔布斯和 iPod 的诞生 – gholk"></a><a href="http://www.ruanyifeng.com/blog/2020/04/ipod-history.html">苹果往事：乔布斯和 iPod 的诞生</a> – gholk</h3><p>介紹賈伯斯回歸蘋果後，擬定的一系列瞄準多媒體的市場戰略，到推出 iPod 的過程。我家裡一台十年以上的 windows pc，竟然有一張 pci 到火線的介面卡，可見當時 apple 推出的火線規格的強大。</p>
<h3 id="DNS-blocklist-to-block-unnecessary-connections-to-Xiaomi-–-DC"><a href="#DNS-blocklist-to-block-unnecessary-connections-to-Xiaomi-–-DC" class="headerlink" title="DNS blocklist to block unnecessary connections to Xiaomi – DC"></a><a href="https://pastebin.com/KtY4RT6w">DNS blocklist to block unnecessary connections to Xiaomi</a> – DC</h3><p>雖然小米早已是慣犯，每次都承諾會改善，但最近又有資安專家跳出來證實小米手機和小米瀏覽器仍然會偷傳資料到位於中國的伺服器，這份 DNS 黑名單是網友整理出來資料傳送可能的網域，可將其加入 pi.hole 等 DNS blocker 防止資料被偷</p>
<h3 id="UX於大規模敏捷開發-SAFe-Agile-實踐和心得-–-Rain"><a href="#UX於大規模敏捷開發-SAFe-Agile-實踐和心得-–-Rain" class="headerlink" title="UX於大規模敏捷開發(SAFe Agile)實踐和心得 – Rain"></a><a href="https://medium.com/uxeastmeetswest/ux%E6%96%BC%E5%A4%A7%E8%A6%8F%E6%A8%A1%E6%95%8F%E6%8D%B7%E9%96%8B%E7%99%BC-safe-agile-%E5%AF%A6%E8%B8%90%E5%92%8C%E5%BF%83%E5%BE%97-78d2c9d52929">UX於大規模敏捷開發(SAFe Agile)實踐和心得</a> – Rain</h3><p>如果你已經習慣於融入大型開發團隊的一員，高效迭代、快速行軍的敏捷開發 (Agile) 對你來說也許就像另個世界的玩笑。他也許受到了許多規模及溝通的限制，無法完全落實於大型團隊，但確實能帶來些值得借鏡的改變。</p>
<h3 id="掘竅-為什麼要使用-rel-quot-noreferrer-quot-，談-target-quot-blank-quot-的安全性風險-–-gholk"><a href="#掘竅-為什麼要使用-rel-quot-noreferrer-quot-，談-target-quot-blank-quot-的安全性風險-–-gholk" class="headerlink" title="[掘竅] 為什麼要使用 rel=&quot;noreferrer&quot;，談 target=&quot;_blank&quot; 的安全性風險 – gholk"></a><a href="https://pjchender.blogspot.com/2020/05/relnoreferrer-targetblank.html">[掘竅] 為什麼要使用 <code>rel=&quot;noreferrer&quot;</code>，談 <code>target=&quot;_blank&quot;</code> 的安全性風險</a> – gholk</h3><p>透過 <code>&lt;a target=&quot;_blank&quot;&gt;</code> 開啟連結，會造成新開啟的網頁，可以透過 <code>window.opener</code> 存取原網頁的 window 物件。另外一則有趣的知識則是，透過 target 屬性，即可控制另一個從該連結開啟的分頁，參見另一篇文章 <a href="https://www.leavesongs.com/PENETRATION/use-target-to-spoof-fishing.html">前端黑魔法之远程控制地址栏</a> 與其內文連結。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #5 - 科技三定律之三: 所有我35歲後發展的技術都是違反直覺要遭天譴的</title>
    <url>/week5/</url>
    <content><![CDATA[<h2 id="專欄-Robotic-Operating-System"><a href="#專欄-Robotic-Operating-System" class="headerlink" title="[專欄] Robotic Operating System"></a>[專欄] Robotic Operating System</h2><h3 id="English-Multiple-machine-setup-for-ROS-melodic-–-DC"><a href="#English-Multiple-machine-setup-for-ROS-melodic-–-DC" class="headerlink" title="[English] Multiple machine setup for ROS melodic – DC"></a><a href="https://blog.danielchen.cc/2020/01/16/Multiple-machine-setup-for-ROS-melodic/">[English] Multiple machine setup for ROS melodic</a> – DC</h3><p>本次文章將介紹如何在 ROS 裡設定多個主機之間的通訊，一般 ROS 的學習範例只會學習到如何在單一電腦上建立節點、節點間的通訊，實際上因為 ROS 主要是透過 TCP/IP 在傳遞訊息，ROS 抽象 TCP/IP 之上的應用層，只要主機間能夠互相透過 IP 或 Hostname 找到彼此則可以將整個網路視為一個實體，透過相同的 API 來存取其他節點上的資源。</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="English-Scheduling-in-Go-–-Rain"><a href="#English-Scheduling-in-Go-–-Rain" class="headerlink" title="[English] Scheduling in Go – Rain"></a><a href="https://medium.com/random-technical-note/scheduling-in-go-727c9b88c93a">[English] Scheduling in Go</a> – Rain</h3><p>This is a note about how Go scheduler implementation.</p>
<h3 id="色彩管理到底在管什麼-–-Ian"><a href="#色彩管理到底在管什麼-–-Ian" class="headerlink" title="色彩管理到底在管什麼 – Ian"></a><a href="https://hackmd.io/@a20034294/color-management">色彩管理到底在管什麼</a> – Ian</h3><p>可能各位會聽到有人在說這個螢幕有廣色域、P3 色域，或是有人在抱怨印刷品有色差之類的，這些就是日常中常常會出現的色彩管理議題。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="看看程式語言學在幹嘛-–-DC"><a href="#看看程式語言學在幹嘛-–-DC" class="headerlink" title="看看程式語言學在幹嘛 – DC"></a><a href="https://josh-hs-ko.github.io/blog/0006/">看看程式語言學在幹嘛</a> – DC</h3><p>這篇由中研院也是 FLOLAC 講師的柯向上研究員所寫的一篇程式語言學的簡單入門講解，解釋了程式語言學發展的動機、基本的想法與程式語言學和數學、邏輯學的關係。</p>
<h3 id="產品上線規劃：分階段釋出網路產品的實作流程與工具-–-Rain"><a href="#產品上線規劃：分階段釋出網路產品的實作流程與工具-–-Rain" class="headerlink" title="產品上線規劃：分階段釋出網路產品的實作流程與工具 – Rain"></a><a href="https://medium.com/3pm-lab/product-release-planning-and-phased-rollout-4de95cd058a1">產品上線規劃：分階段釋出網路產品的實作流程與工具</a> – Rain</h3><p>為了應對技術的日新月異及市場的快速變化，過往的單線性產品釋出策略已然顯得乏力。文章作者從產品經理的角度，分享自身透過對釋出流程進一步細分並勾勒明確核心目標，以實現敏捷而謹慎的迭代式 (iteration) 流程的經驗。</p>
<h3 id="程式-vuex-amp-typescript-套件-–-gholk"><a href="#程式-vuex-amp-typescript-套件-–-gholk" class="headerlink" title="[程式] vuex &amp; typescript 套件 – gholk"></a><a href="http://blog.natsusola.net/2020/06/vuex-typescript.html">[程式] vuex &amp; typescript 套件</a> – gholk</h3><p>著名台灣繪師初夏已經轉職前端工程師一段時間，但他部落格還是發圖為主，少有技術文章；難得出現一篇，雖然我不寫 vue 也不寫 typescript ，還是選了。文章探討了多個為 vuex 中加上 typescript 型別檢查的套件，最後推薦的是  vuex-simple 。許多習慣強型別語言的人初入弱型別語言時，會因為沒有型別檢查、提示而感到不安，因此習慣 typescript 的使用者使用其它無型別的 js 程式時，產生為其加入型別的衝動也是很常見的現象。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #6 - 若人們不相信數學簡單，只因他們未意識到生命之複雜</title>
    <url>/week6/</url>
    <content><![CDATA[<p>本週帶來的是 ROS + Gazebo、pygame 碰撞偵測、如何中止 Unix 管道以及 Co-Opetition 的分享。另外暑假期間 CCNS 預計會舉辦 Rust 讀書會，詳細資訊後續會再公告在<a href="https://www.facebook.com/ncku.ccns/">社團粉專</a>，或加入 <a href="https://discord.gg/ktSHKSq">Discord</a> 和我們一起討論！</p>
<h2 id="專欄-Robotic-Operating-System"><a href="#專欄-Robotic-Operating-System" class="headerlink" title="[專欄] Robotic Operating System"></a>[專欄] Robotic Operating System</h2><h3 id="English-RaceOn-Note-Simulation-–-DC"><a href="#English-RaceOn-Note-Simulation-–-DC" class="headerlink" title="[English] RaceOn Note - Simulation – DC"></a><a href="https://blog.danielchen.cc/2020/03/10/RaceOn-Note-Simulation/">[English] RaceOn Note - Simulation</a> – DC</h3><p>這次的文章也是 <a href="https://raceon.io/">RaceOn!</a> 相關，我用 <a href="http://gazebosim.org/">Gazebo</a> 搭建了一個模擬真實賽道的虛擬環境，因為 Gazebo 和 ROS 有相當好的整合性，我將環境搭起來後可以把我原本跑在實體車上的 Code 原封不動 include 進來使用，於是我就能在模擬的環境中調整參數、實驗而不必和其他人排隊擠實體賽道測試，且模擬環境未來還有機會拿來做更進階的自走車控制演算法研究。這次文章介紹如何將我搭建的環境跑起來，並介紹我有用到的相關工具。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="Reading-Notes-Co-Opetition-–Rain"><a href="#Reading-Notes-Co-Opetition-–Rain" class="headerlink" title="[Reading Notes] Co-Opetition –Rain"></a><a href="https://medium.com/random-life-journal/reading-notes-co-opetition-77f62d11a8d6">[Reading Notes] Co-Opetition</a> –Rain</h3><p>Co-Opetition is a book that analyzes the ideas behind and deduces the reasons for its success by studying the business strategies of many companies over the past few decades. Includes Intel, Nintendo, American Express, NutraSweet, American Airlines, and dozens of other companies that have been using the strategies of co-opetition to change the game of business to their benefit.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="手刻-pygame-矩形碰撞-上篇-碰撞偵測-–-LanKuDot"><a href="#手刻-pygame-矩形碰撞-上篇-碰撞偵測-–-LanKuDot" class="headerlink" title="手刻 pygame 矩形碰撞 (上篇) - 碰撞偵測 – LanKuDot"></a><a href="https://airfishqi.blogspot.com/2019/01/blog-post.html">手刻 pygame 矩形碰撞 (上篇) - 碰撞偵測</a> – LanKuDot</h3><p>pygame 提供的矩形碰撞偵測函式並沒有包含兩矩形相切的情況，但由於視覺上的執著，覺得兩個矩形只要有相切，也要算有碰撞，於是就開始自幹碰撞偵測的不歸路。</p>
<h3 id="終止一組管道的正確姿勢-–-gholk"><a href="#終止一組管道的正確姿勢-–-gholk" class="headerlink" title="終止一組管道的正確姿勢 – gholk"></a><a href="http://gholk.github.io/shell-kill-pipe-process-group.html">終止一組管道的正確姿勢</a> – gholk</h3><p>管道是類 unix 系統中十分實用的概念，連接多支程序的輸入與輸出，發揮組合的力量。但你知道在使用 kill 終止一組管道時，實際發生什麼事嗎？如何正確的關閉管道出現的每一支程序？ linux 使用程序組的概念，將一組管道中的程序分為同一組，在慣例上若 kill 系統呼叫中使用負數，即代表關閉該程序組；而在 shell 中同樣可以使用 kill 與負數代表程序組 id ，終止一組管道中的所有程序。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="英文-SIGSEGV-的-V-是哪裡來的-–-DC"><a href="#英文-SIGSEGV-的-V-是哪裡來的-–-DC" class="headerlink" title="[英文] SIGSEGV 的 V 是哪裡來的? – DC"></a><a href="https://blog.cloudflare.com/why-is-there-a-v-in-sigsegv-segmentation-fault/">[英文] SIGSEGV 的 V 是哪裡來的?</a> – DC</h3><p>熟悉 Linux 作業系統的人一定知道，當程式存取到不合法的記憶體區塊時作業系統會產生一個系統錯誤，稱為 Segmentation Fault，並向程式發送 SIGSEGV 訊號，但 SIGSEGV 中的 V 到底是哪迸出來的??? 不應該叫 SIGSEG<strong>F</strong> 嗎?</p>
<h3 id="好的分類，是用戶體驗中不可或缺的一環-–-Rain"><a href="#好的分類，是用戶體驗中不可或缺的一環-–-Rain" class="headerlink" title="好的分類，是用戶體驗中不可或缺的一環 – Rain"></a><a href="https://medium.com/growing-vision/how-to-classify-655469c14755">好的分類，是用戶體驗中不可或缺的一環</a> – Rain</h3><p>分類是人類大腦進行認知的一種途徑，也是化繁為簡的技巧。一個好的分類系統能貼近人類思考的分類直覺與本能，並有效降低使用時的思考負荷，進而在使用者體驗上脫穎而出。</p>
<h3 id="Rust语言的编程范式-–-gholk"><a href="#Rust语言的编程范式-–-gholk" class="headerlink" title="Rust语言的编程范式 – gholk"></a><a href="https://coolshell.cn/articles/20845.html">Rust语言的编程范式</a> – gholk</h3><p>酷殼網是中國知名程式相關部落格，主要由陳皓經營。在中國有邀請名人發表評論的風氣，如知乎的邀請回答就是此類文化的具體實現，本文即為陳皓發表其對 rust 語言的整體評論。陳皓認為 rust 是為了改進 C++ 而出現的語言，在文章中將其與 Java 、 Go 類比，rust 的特色是使用了變數的所有權與 trait 等概念。文章可以讓不熟悉 rust 的讀者能有基本的認識，衡量是否適合自己學習。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #7 - 善有善報，星有星爆；不是不爆，十秒未到。</title>
    <url>/week7/</url>
    <content><![CDATA[<h2 id="專欄-Robotic-Operating-System"><a href="#專欄-Robotic-Operating-System" class="headerlink" title="[專欄] Robotic Operating System"></a>[專欄] Robotic Operating System</h2><h3 id="English-RaceOn-Note-Live-camera-view-–-DC"><a href="#English-RaceOn-Note-Live-camera-view-–-DC" class="headerlink" title="[English] RaceOn Note - Live camera view – DC"></a><a href="https://blog.danielchen.cc/2020/03/09/RaceOn-Note-Live-camera-view/">[English] RaceOn Note - Live camera view</a> – DC</h3><p><a href="https://raceon.io/">RaceOn!</a> 是我參加 USC 所舉辦的一個校內自走車競賽，這場比賽主要是透過 Webcam 擷取道路影像，並透過一些簡易的視覺演算法來估計車身位置，並根據車身偏離軌道中心的偏移量控制左右轉，其中影像的算法受相機角度及校準的結果影響甚大，因此我開發了一個透過 ROS 擷取即時影像，並將相關視覺演算法參數視覺化的工具。這個小專案使用了 ROS camera 套件傳遞影像資料、OpenCV 做視覺化。</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="English-From-Requirements-to-Database-Schema-–-Rain"><a href="#English-From-Requirements-to-Database-Schema-–-Rain" class="headerlink" title="[English] From Requirements to Database Schema – Rain"></a><a href="https://medium.com/random-life-journal/from-requirements-to-database-schema-898cb72a9a56">[English] From Requirements to Database Schema</a> – Rain</h3><p>One of the responsibilities of a backend engineer is to keep the data organized and make sure all the operations executed correctly. Most of the time, we will achieve that by DBMS (Database Management System), such as SQLite, MySQL, and PostgreSQL.</p>
<h3 id="大學中行政效率與職業疲勞造成的莫不關心-–-gholk"><a href="#大學中行政效率與職業疲勞造成的莫不關心-–-gholk" class="headerlink" title="大學中行政效率與職業疲勞造成的莫不關心 – gholk"></a><a href="https://gholk.github.io/accident-as-work-fatigue-collage-example.html">大學中行政效率與職業疲勞造成的莫不關心 – gholk</a></h3><p>最近交通大學資訊工程學系在靠北交大上吵的沸沸揚揚，一位學生因為學分不足，卻被系辦計算錯誤而以為自己能畢業，結果打亂未來一連串畢業後規劃，學生不滿而引發的論戰。大學的行政效率本來就很有問題，很多修課規定都被抱怨過，但這件事比較像制度與公務員心態造成的問題。另外就是在學校看來，每年都有人延畢，延畢也不是什麼大不了的事，但對學生來說延畢卻是人生的大事，因為學校已經對延畢意外感到疲勞，而產生的認知不同。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="英文-卷積神經網路視覺化-–-DC"><a href="#英文-卷積神經網路視覺化-–-DC" class="headerlink" title="[英文] 卷積神經網路視覺化 – DC"></a><a href="https://poloclub.github.io/cnn-explainer/">[英文] 卷積神經網路視覺化</a> – DC</h3><p>這是一個由 Georgia Tech 的研究團隊所發表的卷積神經網路視覺化工具，他們將 CNN 的所有步驟小至 Conv Operation、Max Pooling、以及 Activation Function，展示每一層的輸入和輸出，以及之間的關係，可幫助初學者理解卷積網路中的各種 layer 的運作過程</p>
<h3 id="產品經理的核心能力－框架思維-–-Rain"><a href="#產品經理的核心能力－框架思維-–-Rain" class="headerlink" title="產品經理的核心能力－框架思維 – Rain"></a><a href="https://medium.com/growing-vision/framework-53b9362c6a66">產品經理的核心能力－框架思維</a> – Rain</h3><p>Project Manager 的技能樹可謂五花八門的令人驚奇，但在這之中是否存在這那麼一個核心競爭力？既能宏觀的洞察產業風向，又能顧及到未來市場變化的佈局，文章中作者所描述的「框架思維」正式在討論著這樣的思維模式如何引領產品與團隊脫穎而出。</p>
<h3 id="用-JavaScript-自己做-POS-出單功能-–-gholk"><a href="#用-JavaScript-自己做-POS-出單功能-–-gholk" class="headerlink" title="用 JavaScript 自己做 POS 出單功能 – gholk"></a><a href="https://medium.com/@r3850355/%E7%94%A8javascript%E8%87%AA%E5%B7%B1%E5%81%9Apos%E5%87%BA%E5%96%AE%E5%8A%9F%E8%83%BD-ad54b6640477">用 JavaScript 自己做 POS 出單功能</a> – gholk</h3><p>POS 系統是現代商店中用來處理訂單、結帳的電子系統，基本的功能有列印收據、追蹤訂單、統計商品等。作者 RenZhou 身為一個轉職開飲料店的全端工程師，決定自幹一套 POS 系統。對於商業邏輯、gui 介面等都能以 web 技術解決，而文中主要描述的問題為列印收據時需要與印表機打交道的問題。最後作者使用它牌的驅動程式與 linux 上的 cups 列印伺服器來處理列印問題，cups 使用基於 http 的 ipp 協議，因此能方便的與 node.js 後端互動，也有現成的 npm 套件可供使用。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #8 - pyenv 的設定與 node_module 的深度</title>
    <url>/week8/</url>
    <content><![CDATA[<h2 id="專欄-SRE-works"><a href="#專欄-SRE-works" class="headerlink" title="[專欄] SRE works"></a>[專欄] SRE works</h2><h3 id="Octodns-Because-you-can-manage-DNS-records-easier"><a href="#Octodns-Because-you-can-manage-DNS-records-easier" class="headerlink" title="Octodns - Because you can manage DNS records easier"></a><a href="https://blog.tsunderechen.io/2020/06/octodns-cause-you-can-manage-dns-easier/">Octodns - Because you can manage DNS records easier</a></h3><p>If you are working in a team, it can be hard for multiple people to manage DNS records at the same time, use console from DNS provider is easy, but you can’t review changes or have log for those changes. It’s time to use DNS manager, try octodns.</p>
<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="English-Construct-the-Resource-Hierarchy-–-Rain"><a href="#English-Construct-the-Resource-Hierarchy-–-Rain" class="headerlink" title="[English] Construct the Resource Hierarchy – Rain"></a><a href="https://medium.com/random-life-journal/construct-the-resource-hierarchy-2615bafd447a">[English] Construct the Resource Hierarchy</a> – Rain</h3><p>Continue the previous article “From Requirements to Database Schema”, we already build an organized data storage system now. Now we want to access or operate them outside the system, we definitely will not allow the website visitor or service user to touch our database directly, that’s extremely crazy and dangerous.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="xmlstarlet-處理-kml-資料的經驗-–-gholk"><a href="#xmlstarlet-處理-kml-資料的經驗-–-gholk" class="headerlink" title="xmlstarlet 處理 kml 資料的經驗 – gholk"></a><a href="http://gholk.github.io/xml-starlet-kml-lack.html">xmlstarlet 處理 kml 資料的經驗</a> – gholk</h3><p>xmlstarlet 是一支用來處理 xml 的工具程式。在 unix 環境下，有 grep sed awk 各種工具可以用來處理文字資料， 但這些工具頂多使用 regexp，只適合處理格式單純的資料，碰到 xml 都不太方便； 而 xmlstarlet 可以使用 xpath 來操作 xml 資料。 但 xmlstarlet 還是有一些使用上不方便處，且專案老舊缺乏人力維護。文章中使用 xmlstarlet select 從 xml 中以 xpath 選取出資料，並記錄使用場景及 xml 的優劣。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="goroutine-背后的系统知识-–-DC"><a href="#goroutine-背后的系统知识-–-DC" class="headerlink" title="goroutine 背后的系统知识 – DC"></a><a href="http://www.sizeofvoid.net/goroutine-under-the-hood/">goroutine 背后的系统知识</a> – DC</h3><p>Go 語言於 2007 年由 Google 發表，Go 整合了其他語言的優缺點並加入原生平行運算語法支援，使其易於開發網站應用程式，此篇文章介紹 Goroutine 背後的系統知識，從作業系統與程式語言的關係到 Thread、Concurrency、Parallelism 的相關基礎知識，最後介紹 Goroutine 的設計邏輯。</p>
<h3 id="產品經理如何平衡用戶體驗和商業利益？-–-Rain"><a href="#產品經理如何平衡用戶體驗和商業利益？-–-Rain" class="headerlink" title="產品經理如何平衡用戶體驗和商業利益？ – Rain"></a><a href="https://medium.com/growing-vision/product-empathy-44970ea92477">產品經理如何平衡用戶體驗和商業利益？</a> – Rain</h3><p>銷售場景長期一直都是使用者體驗和商務兩個團隊容易意見相左的戰場，但是否有可能在這之中有跡可循的取得平衡？文中作者將會以近十年快速發展的網路展業為例，解構許多迷思與癥結點。</p>
<h3 id="对-tail-f-使用管道-–-gholk"><a href="#对-tail-f-使用管道-–-gholk" class="headerlink" title="对 tail -f 使用管道 – gholk"></a><a href="https://harttle.land/2020/06/06/tail-f-pipe.html">对 tail -f 使用管道</a> – gholk</h3><p>一些 linux 的程式會依輸出的裝置不同改變行為，例如在輸出到終端機或管道時，以 ansi 跳脫序列上色或不上色。而 tail 雖然不上色，但也會在輸出為終端機時關閉暫存，而輸出若為管道則會暫存輸出而無法立即顯示結果。在類 unix 系統中標準輸入輸出皆為裝置，故可以檢查 <code>/dev/stdout</code> 裝置類型，判斷輸出是否為終端機。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
  <entry>
    <title>Week #9 - 整個 BBS 都是 legacy code</title>
    <url>/week9/</url>
    <content><![CDATA[<h2 id="專欄-Random-Life-Journal"><a href="#專欄-Random-Life-Journal" class="headerlink" title="[專欄] Random Life Journal"></a>[專欄] Random Life Journal</h2><h3 id="English-From-Resource-Hierarchy-to-RESTful-API-–-Rain"><a href="#English-From-Resource-Hierarchy-to-RESTful-API-–-Rain" class="headerlink" title="[English] From Resource Hierarchy to RESTful API – Rain"></a><a href="https://medium.com/random-life-journal/from-resource-hierarchy-to-restful-api-dabc1866821e?source=friends_link&sk=2af6e6d39d34b1e5ec9ae5ac9b8797d3">[English] From Resource Hierarchy to RESTful API</a> – Rain</h3><p>This time, I will try to transform the resource hierarchy from the previous article “Construct the Resource Hierarchy” into a set of practical RESTful APIs. If you haven’t read this series of articles, I would recommend you start from the first part “From Requirements to Database Schema”.</p>
<h2 id="隨機性技術隨筆"><a href="#隨機性技術隨筆" class="headerlink" title="隨機性技術隨筆"></a>隨機性技術隨筆</h2><h3 id="使用-GitHub-Action-自動部屬-Hexo-GitHub-Page-–-DC"><a href="#使用-GitHub-Action-自動部屬-Hexo-GitHub-Page-–-DC" class="headerlink" title="使用 GitHub Action 自動部屬 Hexo GitHub Page – DC"></a><a href="https://blog.danielchen.cc/2020/06/16/hexo-github-action/">使用 GitHub Action 自動部屬 Hexo GitHub Page</a> – DC</h3><p>Hexo 是很多人用的一套靜態部落格，他的優點是提供簡單可以部屬到 GitHub Page 上的方法，這次來介紹如何用 GitHub 去年推出的 GitHub Action 來自動部屬部落格。</p>
<h3 id="主成份分析-Principal-Component-Analysis-前情提要-–-raiso"><a href="#主成份分析-Principal-Component-Analysis-前情提要-–-raiso" class="headerlink" title="主成份分析 Principal Component Analysis - 前情提要 – raiso"></a><a href="https://hackmd.io/@raiso/S1ut4rac8">主成份分析 Principal Component Analysis - 前情提要</a> – raiso</h3><p>PCA 是一種泛用的向量資料分析方法，可以用來對時間序列資料壓縮。其原理是找出一組在同一向量空間中的向量資料的一組特殊向量基底，該基底又稱為特徵向量。一般將特徵向量依特徵值由顯著到不顯著排序，去除其中不顯著的特徵向量，只會對資料造成輕徵的影響，因此 PCA 可以用在資料壓縮上。</p>
<h2 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h2><h3 id="筆記-API-設計概念-上篇-–-LanKuDot"><a href="#筆記-API-設計概念-上篇-–-LanKuDot" class="headerlink" title="[筆記] API 設計概念 - 上篇 – LanKuDot"></a><a href="https://airfishqi.blogspot.com/2020/07/api.html">[筆記] API 設計概念 - 上篇</a> – LanKuDot</h3><p>之前為了 python 專案要提供 module API 給使用者使用，而去搜尋相關資料，找到這場 Google 的演講 - 「How To Design A Good API and Why it Matters」。當中提到平常寫程式就是一種 API 設計，因而覺得演講中的概念對於寫程式的觀念相當有幫助，所以將其整理成兩篇筆記。上篇紀錄 API 設計的通則與一個好的 API 的特性。</p>
<h3 id="美國夢-2-0-版：逃離舊金山⋯⋯但金仍然可以繼續淘-–-Rain"><a href="#美國夢-2-0-版：逃離舊金山⋯⋯但金仍然可以繼續淘-–-Rain" class="headerlink" title="美國夢 2.0 版：逃離舊金山⋯⋯但金仍然可以繼續淘 – Rain"></a><a href="https://vocus.cc/bass/5f38c478fd89780001d1b3f7">美國夢 2.0 版：逃離舊金山⋯⋯但金仍然可以繼續淘</a> – Rain</h3><p>日新月異的科技不斷的挑戰著固有的生活模式，交通、學習、居住、聯絡各個方面以往的諸多限制逐一被打破。工作上的地理因素限制亦是如此，隨著數位遊牧民族與遠端工作的興起，以及受疫情所趨的推波助瀾，「理想的生活環境」與「理想的工作」兩個需求開始迅速的解耦。文章作者以矽谷、舊金山現況為例，從軟體工程師的視角講述生活方式、心境、以及未來規劃的轉變。</p>
<h3 id="為什麼-Telegram-不能搜尋中文訊息-–-gholk"><a href="#為什麼-Telegram-不能搜尋中文訊息-–-gholk" class="headerlink" title="為什麼 Telegram 不能搜尋中文訊息 – gholk"></a><a href="https://medium.com/@nevik.w39/%E7%82%BA%E4%BB%80%E9%BA%BC-telegram-%E4%B8%8D%E8%83%BD%E6%90%9C%E5%B0%8B%E4%B8%AD%E6%96%87%E8%A8%8A%E6%81%AF-6b7d07690e6f">為什麼 Telegram 不能搜尋中文訊息</a> – gholk</h3><p>telegram 一項為中文使用者詬病的問題，就是對中文訊息的搜尋功能體驗不佳，常常搜不到或只能搜到奇怪的結果。作者閱讀 telegram 的原始碼，發現原因在於 telegram 依英文以空白斷詞的習慣來設計斷詞機制，使得中文至 CJK 等文字無法正確斷詞，導致搜尋功能殘廢。在英文中的確常以空白斷詞來最佳化文本的搜尋速度，例如 mdn 中對 indexeddb 的使用教學也是以空白斷詞後實現搜尋功能。這些習慣常造成中文使用的問題。</p>
]]></content>
      <tags>
        <tag>weekly</tag>
      </tags>
  </entry>
</search>
